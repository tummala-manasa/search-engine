{"id": 89, "url": "https://react.dev/reference/react/Profiler", "title": "<Profiler>", "content": "'<Profiler> – React', 'Stream React Conf on May 15-16.', 'Learn more.', 'React', 'Search', '⌘', 'Ctrl', 'K', 'Learn', 'Reference', 'Community', 'Blog', 'react@18.2.0', 'Overview', ' ', 'Hooks', ' ', 'use', ' ', ' - This feature is available in the latest Canary', 'useCallback', ' ', 'useContext', ' ', 'useDebugValue', ' ', 'useDeferredValue', ' ', 'useEffect', ' ', 'useId', ' ', 'useImperativeHandle', ' ', 'useInsertionEffect', ' ', 'useLayoutEffect', ' ', 'useMemo', ' ', 'useOptimistic', ' ', ' - This feature is available in the latest Canary', 'useReducer', ' ', 'useRef', ' ', 'useState', ' ', 'useSyncExternalStore', ' ', 'useTransition', ' ', 'Components', ' ', '<Fragment> (<>)', ' ', '<Profiler>', ' ', '<StrictMode>', ' ', '<Suspense>', ' ', 'APIs', ' ', 'cache', ' ', ' - This feature is available in the latest Canary', 'createContext', ' ', 'forwardRef', ' ', 'lazy', ' ', 'memo', ' ', 'startTransition', ' ', 'experimental_taintObjectReference', ' ', ' - This feature is available in the latest Canary', 'experimental_taintUniqueValue', ' ', ' - This feature is available in the latest Canary', 'Directives', ' ', ' - This feature is available in the latest Canary', \"'use client'\", ' ', ' - This feature is available in the latest Canary', \"'use server'\", ' ', ' - This feature is available in the latest Canary', 'react-dom@18.2.0', 'Hooks', ' ', 'useFormState', ' ', ' - This feature is available in the latest Canary', 'useFormStatus', ' ', ' - This feature is available in the latest Canary', 'Components', ' ', 'Common (e.g. <div>)', ' ', '<form>', ' ', ' - This feature is available in the latest Canary', '<input>', ' ', '<option>', ' ', '<progress>', ' ', '<select>', ' ', '<textarea>', ' ', '<link>', ' ', ' - This feature is available in the latest Canary', '<meta>', ' ', ' - This feature is available in the latest Canary', '<script>', ' ', ' - This feature is available in the latest Canary', '<style>', ' ', ' - This feature is available in the latest Canary', '<title>', ' ', ' - This feature is available in the latest Canary', 'APIs', ' ', 'createPortal', ' ', 'flushSync', ' ', 'findDOMNode', ' ', 'hydrate', ' ', 'preconnect', ' ', ' - This feature is available in the latest Canary', 'prefetchDNS', ' ', ' - This feature is available in the latest Canary', 'preinit', ' ', ' - This feature is available in the latest Canary', 'preinitModule', ' ', ' - This feature is available in the latest Canary', 'preload', ' ', ' - This feature is available in the latest Canary', 'preloadModule', ' ', ' - This feature is available in the latest Canary', 'render', ' ', 'unmountComponentAtNode', ' ', 'Client APIs', ' ', 'createRoot', ' ', 'hydrateRoot', ' ', 'Server APIs', ' ', 'renderToNodeStream', ' ', 'renderToPipeableStream', ' ', 'renderToReadableStream', ' ', 'renderToStaticMarkup', ' ', 'renderToStaticNodeStream', ' ', 'renderToString', ' ', 'Rules of React', 'Overview', ' ', 'Components and Hooks must be pure', ' ', 'React calls Components and Hooks', ' ', 'Rules of Hooks', ' ', 'Legacy APIs', 'Legacy React APIs', ' ', 'Children', ' ', 'cloneElement', ' ', 'Component', ' ', 'createElement', ' ', 'createFactory', ' ', 'createRef', ' ', 'isValidElement', ' ', 'PureComponent', ' ', 'Is this page useful?', 'API Reference', 'Components', '<Profiler>', '<Profiler>', ' lets you measure rendering performance of a React tree programmatically.', '<', 'Profiler', ' ', 'id', '=', '\"App\"', ' ', 'onRender', '=', '{', 'onRender', '}', '>', '  ', '<', 'App', ' ', '/>', '</', 'Profiler', '>', '\\n', 'Reference ', '<Profiler>', ' ', 'onRender', ' callback ', 'Usage ', 'Measuring rendering performance programmatically ', 'Measuring different parts of the application ', '\\n', '\\n', 'Reference ', '\\n', '<Profiler>', ' ', '\\n', 'Wrap a component tree in a ', '<Profiler>', ' to measure its rendering performance.', '\\n', '<', 'Profiler', ' ', 'id', '=', '\"App\"', ' ', 'onRender', '=', '{', 'onRender', '}', '>', '  ', '<', 'App', ' ', '/>', '</', 'Profiler', '>', '\\n', 'Props ', '\\n', '\\n', 'id', ': A string identifying the part of the UI you are measuring.', '\\n', 'onRender', ': An ', 'onRender', ' callback', ' that React calls every time components within the profiled tree update. It receives information about what was rendered and how much time it took.', '\\n', '\\n', 'Caveats ', '\\n', '\\n', 'Profiling adds some additional overhead, so ', 'it is disabled in the production build by default.', ' To opt into production profiling, you need to enable a ', 'special production build with profiling enabled.', '\\n', '\\n', '\\n', 'onRender', ' callback ', '\\n', 'React will call your ', 'onRender', ' callback with information about what was rendered.', '\\n', 'function', ' ', 'onRender', '(', 'id', ',', ' ', 'phase', ',', ' ', 'actualDuration', ',', ' ', 'baseDuration', ',', ' ', 'startTime', ',', ' ', 'commitTime', ')', ' ', '{', '  ', '// Aggregate or log render timings...', '}', '\\n', 'Parameters ', '\\n', '\\n', 'id', ': The string ', 'id', ' prop of the ', '<Profiler>', ' tree that has just committed. This lets you identify which part of the tree was committed if you are using multiple profilers.', '\\n', 'phase', ': ', '\"mount\"', ', ', '\"update\"', ' or ', '\"nested-update\"', '. This lets you know whether the tree has just been mounted for the first time or re-rendered due to a change in props, state, or Hooks.', '\\n', 'actualDuration', ': The number of milliseconds spent rendering the ', '<Profiler>', ' and its descendants for the current update. This indicates how well the subtree makes use of memoization (e.g. ', 'memo', ' and ', 'useMemo', '). Ideally this value should decrease significantly after the initial mount as many of the descendants will only need to re-render if their specific props change.', '\\n', 'baseDuration', ': The number of milliseconds estimating how much time it would take to re-render the entire ', '<Profiler>', ' subtree without any optimizations. It is calculated by summing up the most recent render durations of each component in the tree. This value estimates a worst-case cost of rendering (e.g. the initial mount or a tree with no memoization). Compare ', 'actualDuration', ' against it to see if memoization is working.', '\\n', 'startTime', ': A numeric timestamp for when React began rendering the current update.', '\\n', 'commitTime', ': A numeric timestamp for when React committed the current update. This value is shared between all profilers in a commit, enabling them to be grouped if desirable.', '\\n', '\\n', '\\n', 'Usage ', '\\n', 'Measuring rendering performance programmatically ', '\\n', 'Wrap the ', '<Profiler>', ' component around a React tree to measure its rendering performance.', '\\n', '<', 'App', '>', '  ', '<', 'Profiler', ' ', 'id', '=', '\"Sidebar\"', ' ', 'onRender', '=', '{', 'onRender', '}', '>', '    ', '<', 'Sidebar', ' ', '/>', '  ', '</', 'Profiler', '>', '  ', '<', 'PageContent', ' ', '/>', '</', 'App', '>', '\\n', 'It requires two props: an ', 'id', ' (string) and an ', 'onRender', ' callback (function) which React calls any time a component within the tree “commits” an update.', '\\n', 'Pitfall', 'Profiling adds some additional overhead, so ', 'it is disabled in the production build by default.', ' To opt into production profiling, you need to enable a ', 'special production build with profiling enabled.', '\\n', 'Note', '<Profiler>', ' lets you gather measurements programmatically. If you’re looking for an interactive profiler, try the Profiler tab in ', 'React Developer Tools', '. It exposes similar functionality as a browser extension.', '\\n', '\\n', 'Measuring different parts of the application ', '\\n', 'You can use multiple ', '<Profiler>', ' components to measure different parts of your application:', '\\n', '<', 'App', '>', '  ', '<', 'Profiler', ' ', 'id', '=', '\"Sidebar\"', ' ', 'onRender', '=', '{', 'onRender', '}', '>', '    ', '<', 'Sidebar', ' ', '/>', '  ', '</', 'Profiler', '>', '  ', '<', 'Profiler', ' ', 'id', '=', '\"Content\"', ' ', 'onRender', '=', '{', 'onRender', '}', '>', '    ', '<', 'Content', ' ', '/>', '  ', '</', 'Profiler', '>', '</', 'App', '>', '\\n', 'You can also nest ', '<Profiler>', ' components:', '\\n', '<', 'App', '>', '  ', '<', 'Profiler', ' ', 'id', '=', '\"Sidebar\"', ' ', 'onRender', '=', '{', 'onRender', '}', '>', '    ', '<', 'Sidebar', ' ', '/>', '  ', '</', 'Profiler', '>', '  ', '<', 'Profiler', ' ', 'id', '=', '\"Content\"', ' ', 'onRender', '=', '{', 'onRender', '}', '>', '    ', '<', 'Content', '>', '      ', '<', 'Profiler', ' ', 'id', '=', '\"Editor\"', ' ', 'onRender', '=', '{', 'onRender', '}', '>', '        ', '<', 'Editor', ' ', '/>', '      ', '</', 'Profiler', '>', '      ', '<', 'Preview', ' ', '/>', '    ', '</', 'Content', '>', '  ', '</', 'Profiler', '>', '</', 'App', '>', '\\n', 'Although ', '<Profiler>', ' is a lightweight component, it should be used only when necessary. Each use adds some CPU and memory overhead to an application.', '\\n', 'Previous', '<Fragment> (<>)', 'Next', '<StrictMode>', 'How do you like these docs?', 'Take our survey!', '©', '2024', 'Learn React', 'Quick Start', 'Installation', 'Describing the UI', 'Adding Interactivity', 'Managing State', 'Escape Hatches', 'API Reference', 'React APIs', 'React DOM APIs', 'Community', 'Code of Conduct', 'Meet the Team', 'Docs Contributors', 'Acknowledgements', 'More', 'Blog', 'React Native', 'Privacy', 'Terms', 'On this page', 'Overview', 'Reference ', '<Profiler>', ' ', 'onRender', ' callback ', 'Usage ', 'Measuring rendering performance programmatically ', 'Measuring different parts of the application ', "}