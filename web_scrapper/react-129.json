{"id": 129, "url": "https://react.dev/learn/importing-and-exporting-components", "title": "Importing and Exporting Components", "content": "'Importing and Exporting Components – React', 'Stream React Conf on May 15-16.', 'Learn more.', 'React', 'Search', '⌘', 'Ctrl', 'K', 'Learn', 'Reference', 'Community', 'Blog', 'GET STARTED', 'Quick Start', ' ', 'Tutorial: Tic-Tac-Toe', ' ', 'Thinking in React', ' ', 'Installation', ' ', 'Start a New React Project', ' ', 'Add React to an Existing Project', ' ', 'Editor Setup', ' ', 'Using TypeScript', ' ', 'React Developer Tools', ' ', 'LEARN REACT', 'Describing the UI', ' ', 'Your First Component', ' ', 'Importing and Exporting Components', ' ', 'Writing Markup with JSX', ' ', 'JavaScript in JSX with Curly Braces', ' ', 'Passing Props to a Component', ' ', 'Conditional Rendering', ' ', 'Rendering Lists', ' ', 'Keeping Components Pure', ' ', 'Your UI as a Tree', ' ', 'Adding Interactivity', ' ', 'Responding to Events', ' ', \"State: A Component's Memory\", ' ', 'Render and Commit', ' ', 'State as a Snapshot', ' ', 'Queueing a Series of State Updates', ' ', 'Updating Objects in State', ' ', 'Updating Arrays in State', ' ', 'Managing State', ' ', 'Reacting to Input with State', ' ', 'Choosing the State Structure', ' ', 'Sharing State Between Components', ' ', 'Preserving and Resetting State', ' ', 'Extracting State Logic into a Reducer', ' ', 'Passing Data Deeply with Context', ' ', 'Scaling Up with Reducer and Context', ' ', 'Escape Hatches', ' ', 'Referencing Values with Refs', ' ', 'Manipulating the DOM with Refs', ' ', 'Synchronizing with Effects', ' ', 'You Might Not Need an Effect', ' ', 'Lifecycle of Reactive Effects', ' ', 'Separating Events from Effects', ' ', 'Removing Effect Dependencies', ' ', 'Reusing Logic with Custom Hooks', ' ', 'Is this page useful?', 'Learn React', 'Describing the UI', 'Importing and Exporting Components', 'The magic of components lies in their reusability: you can create components that are composed of other components. But as you nest more and more components, it often makes sense to start splitting them into different files. This lets you keep your files easy to scan and reuse components in more places.', '\\n', 'You will learn', '\\n', 'What a root component file is', '\\n', 'How to import and export a component', '\\n', 'When to use default and named imports and exports', '\\n', 'How to import and export multiple components from one file', '\\n', 'How to split components into multiple files', '\\n', '\\n', 'The root component file ', '\\n', 'In ', 'Your First Component', ', you made a ', 'Profile', ' component and a ', 'Gallery', ' component that renders it:', '\\n', 'App.js', 'App.js', ' Reset', 'Fork', 'function', ' ', 'Profile', '(', ')', ' ', '{', '\\n  ', 'return', ' ', '(', '\\n    ', '<', 'img', '\\n      ', 'src', '=', '\"https://i.imgur.com/MK3eW3As.jpg\"', '\\n      ', 'alt', '=', '\"Katherine Johnson\"', '\\n    ', '/>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'Gallery', '(', ')', ' ', '{', '\\n  ', 'return', ' ', '(', '\\n    ', '<', 'section', '>', '\\n      ', '<', 'h1', '>', 'Amazing scientists', '</', 'h1', '>', '\\n      ', '<', 'Profile', ' ', '/>', '\\n      ', '<', 'Profile', ' ', '/>', '\\n      ', '<', 'Profile', ' ', '/>', '\\n    ', '</', 'section', '>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', 'Show more', '\\n', 'These currently live in a ', 'root component file,', ' named ', 'App.js', ' in this example. Depending on your setup, your root component could be in another file, though. If you use a framework with file-based routing, such as Next.js, your root component will be different for every page.', '\\n', 'Exporting and importing a component ', '\\n', 'What if you want to change the landing screen in the future and put a list of science books there? Or place all the profiles somewhere else? It makes sense to move ', 'Gallery', ' and ', 'Profile', ' out of the root component file. This will make them more modular and reusable in other files. You can move a component in three steps:', '\\n', '\\n', 'Make', ' a new JS file to put the components in.', '\\n', 'Export', ' your function component from that file (using either ', 'default', ' or ', 'named', ' exports).', '\\n', 'Import', ' it in the file where you’ll use the component (using the corresponding technique for importing ', 'default', ' or ', 'named', ' exports).', '\\n', '\\n', 'Here both ', 'Profile', ' and ', 'Gallery', ' have been moved out of ', 'App.js', ' into a new file called ', 'Gallery.js', '. Now you can change ', 'App.js', ' to import ', 'Gallery', ' from ', 'Gallery.js', ':', '\\n', 'App.js', 'Gallery.js', 'App.js', ' Reset', 'Fork', 'import', ' ', 'Gallery', ' ', 'from', ' ', \"'./Gallery.js'\", ';', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '\\n  ', 'return', ' ', '(', '\\n    ', '<', 'Gallery', ' ', '/>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', '\\n', 'Notice how this example is broken down into two component files now:', '\\n', '\\n', 'Gallery.js', ':', '\\n', '\\n', 'Defines the ', 'Profile', ' component which is only used within the same file and is not exported.', '\\n', 'Exports the ', 'Gallery', ' component as a ', 'default export.', '\\n', '\\n', '\\n', 'App.js', ':', '\\n', '\\n', 'Imports ', 'Gallery', ' as a ', 'default import', ' from ', 'Gallery.js', '.', '\\n', 'Exports the root ', 'App', ' component as a ', 'default export.', '\\n', '\\n', '\\n', '\\n', 'Note', 'You may encounter files that leave off the ', '.js', ' file extension like so:', 'import', ' ', 'Gallery', ' ', 'from', ' ', \"'./Gallery'\", ';', 'Either ', \"'./Gallery.js'\", ' or ', \"'./Gallery'\", ' will work with React, though the former is closer to how ', 'native ES Modules', ' work.', '\\n', 'Deep Dive', 'Default vs named exports ', 'Show Details', 'There are two primary ways to export values with JavaScript: default exports and named exports. So far, our examples have only used default exports. But you can use one or both of them in the same file. ', 'A file can have no more than one ', 'default', ' export, but it can have as many ', 'named', ' exports as you like.', 'How you export your component dictates how you must import it. You will get an error if you try to import a default export the same way you would a named export! This chart can help you keep track:', 'Syntax', 'Export statement', 'Import statement', 'Default', 'export default function Button() {}', \"import Button from './Button.js';\", 'Named', 'export function Button() {}', \"import { Button } from './Button.js';\", 'When you write a ', 'default', ' import, you can put any name you want after ', 'import', '. For example, you could write ', \"import Banana from './Button.js'\", ' instead and it would still provide you with the same default export. In contrast, with named imports, the name has to match on both sides. That’s why they are called ', 'named', ' imports!', 'People often use default exports if the file exports only one component, and use named exports if it exports multiple components and values.', ' Regardless of which coding style you prefer, always give meaningful names to your component functions and the files that contain them. Components without names, like ', 'export default () => {}', ', are discouraged because they make debugging harder.', '\\n', 'Exporting and importing multiple components from the same file ', '\\n', 'What if you want to show just one ', 'Profile', ' instead of a gallery? You can export the ', 'Profile', ' component, too. But ', 'Gallery.js', ' already has a ', 'default', ' export, and you can’t have ', 'two', ' default exports. You could create a new file with a default export, or you could add a ', 'named', ' export for ', 'Profile', '. ', 'A file can only have one default export, but it can have numerous named exports!', '\\n', 'Note', 'To reduce the potential confusion between default and named exports, some teams choose to only stick to one style (default or named), or avoid mixing them in a single file. Do what works best for you!', '\\n', 'First, ', 'export', ' ', 'Profile', ' from ', 'Gallery.js', ' using a named export (no ', 'default', ' keyword):', '\\n', 'export', ' ', 'function', ' ', 'Profile', '(', ')', ' ', '{', '  ', '// ...', '}', '\\n', 'Then, ', 'import', ' ', 'Profile', ' from ', 'Gallery.js', ' to ', 'App.js', ' using a named import (with the curly braces):', '\\n', 'import', ' ', '{', ' ', 'Profile', ' ', '}', ' ', 'from', ' ', \"'./Gallery.js'\", ';', '\\n', 'Finally, ', 'render', ' ', '<Profile />', ' from the ', 'App', ' component:', '\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '  ', 'return', ' ', '<', 'Profile', ' ', '/>', ';', '}', '\\n', 'Now ', 'Gallery.js', ' contains two exports: a default ', 'Gallery', ' export, and a named ', 'Profile', ' export. ', 'App.js', ' imports both of them. Try editing ', '<Profile />', ' to ', '<Gallery />', ' and back in this example:', '\\n', 'App.js', 'Gallery.js', 'App.js', ' Reset', 'Fork', 'import', ' ', 'Gallery', ' ', 'from', ' ', \"'./Gallery.js'\", ';', '\\n', 'import', ' ', '{', ' ', 'Profile', ' ', '}', ' ', 'from', ' ', \"'./Gallery.js'\", ';', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '\\n  ', 'return', ' ', '(', '\\n    ', '<', 'Profile', ' ', '/>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', '\\n', 'Now you’re using a mix of default and named exports:', '\\n', '\\n', 'Gallery.js', ':', '\\n', '\\n', 'Exports the ', 'Profile', ' component as a ', 'named export called ', 'Profile', '.', '\\n', 'Exports the ', 'Gallery', ' component as a ', 'default export.', '\\n', '\\n', '\\n', 'App.js', ':', '\\n', '\\n', 'Imports ', 'Profile', ' as a ', 'named import called ', 'Profile', ' from ', 'Gallery.js', '.', '\\n', 'Imports ', 'Gallery', ' as a ', 'default import', ' from ', 'Gallery.js', '.', '\\n', 'Exports the root ', 'App', ' component as a ', 'default export.', '\\n', '\\n', '\\n', '\\n', 'Recap', 'On this page you learned:', '\\n', 'What a root component file is', '\\n', 'How to import and export a component', '\\n', 'When and how to use default and named imports and exports', '\\n', 'How to export multiple components from the same file', '\\n', '\\n', 'Try out some challenges', 'Challenge', ' ', '1', ' of', ' ', '1', ': ', 'Split the components further ', 'Currently, ', 'Gallery.js', ' exports both ', 'Profile', ' and ', 'Gallery', ', which is a bit confusing.', 'Move the ', 'Profile', ' component to its own ', 'Profile.js', ', and then change the ', 'App', ' component to render both ', '<Profile />', ' and ', '<Gallery />', ' one after another.', 'You may use either a default or a named export for ', 'Profile', ', but make sure that you use the corresponding import syntax in both ', 'App.js', ' and ', 'Gallery.js', '! You can refer to the table from the deep dive above:', 'Syntax', 'Export statement', 'Import statement', 'Default', 'export default function Button() {}', \"import Button from './Button.js';\", 'Named', 'export function Button() {}', \"import { Button } from './Button.js';\", 'App.js', 'Gallery.js', 'Profile.js', 'Gallery.js', ' Reset', 'Fork', '// Move me to Profile.js!', '\\n', 'export', ' ', 'function', ' ', 'Profile', '(', ')', ' ', '{', '\\n  ', 'return', ' ', '(', '\\n    ', '<', 'img', '\\n      ', 'src', '=', '\"https://i.imgur.com/QIrZWGIs.jpg\"', '\\n      ', 'alt', '=', '\"Alan L. Hart\"', '\\n    ', '/>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'Gallery', '(', ')', ' ', '{', '\\n  ', 'return', ' ', '(', '\\n    ', '<', 'section', '>', '\\n      ', '<', 'h1', '>', 'Amazing scientists', '</', 'h1', '>', '\\n      ', '<', 'Profile', ' ', '/>', '\\n      ', '<', 'Profile', ' ', '/>', '\\n      ', '<', 'Profile', ' ', '/>', '\\n    ', '</', 'section', '>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', 'Show more', 'After you get it working with one kind of exports, make it work with the other kind.', ' ', 'Show hint', ' ', 'Show solution', 'Previous', 'Your First Component', 'Next', 'Writing Markup with JSX', 'How do you like these docs?', 'Take our survey!', '©', '2024', 'Learn React', 'Quick Start', 'Installation', 'Describing the UI', 'Adding Interactivity', 'Managing State', 'Escape Hatches', 'API Reference', 'React APIs', 'React DOM APIs', 'Community', 'Code of Conduct', 'Meet the Team', 'Docs Contributors', 'Acknowledgements', 'More', 'Blog', 'React Native', 'Privacy', 'Terms', 'On this page', 'Overview', 'The root component file ', 'Exporting and importing a component ', 'Exporting and importing multiple components from the same file ', 'Recap', 'Challenges', "}