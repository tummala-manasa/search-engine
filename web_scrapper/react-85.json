{"id": 85, "url": "https://react.dev/reference/react/lazy", "title": "lazy", "content": "'lazy ‚Äì React', 'Stream React Conf on May 15-16.', 'Learn more.', 'React', 'Search', '‚åò', 'Ctrl', 'K', 'Learn', 'Reference', 'Community', 'Blog', 'react@18.2.0', 'Overview', ' ', 'Hooks', ' ', 'use', ' ', ' - This feature is available in the latest Canary', 'useCallback', ' ', 'useContext', ' ', 'useDebugValue', ' ', 'useDeferredValue', ' ', 'useEffect', ' ', 'useId', ' ', 'useImperativeHandle', ' ', 'useInsertionEffect', ' ', 'useLayoutEffect', ' ', 'useMemo', ' ', 'useOptimistic', ' ', ' - This feature is available in the latest Canary', 'useReducer', ' ', 'useRef', ' ', 'useState', ' ', 'useSyncExternalStore', ' ', 'useTransition', ' ', 'Components', ' ', '<Fragment> (<>)', ' ', '<Profiler>', ' ', '<StrictMode>', ' ', '<Suspense>', ' ', 'APIs', ' ', 'cache', ' ', ' - This feature is available in the latest Canary', 'createContext', ' ', 'forwardRef', ' ', 'lazy', ' ', 'memo', ' ', 'startTransition', ' ', 'experimental_taintObjectReference', ' ', ' - This feature is available in the latest Canary', 'experimental_taintUniqueValue', ' ', ' - This feature is available in the latest Canary', 'Directives', ' ', ' - This feature is available in the latest Canary', \"'use client'\", ' ', ' - This feature is available in the latest Canary', \"'use server'\", ' ', ' - This feature is available in the latest Canary', 'react-dom@18.2.0', 'Hooks', ' ', 'useFormState', ' ', ' - This feature is available in the latest Canary', 'useFormStatus', ' ', ' - This feature is available in the latest Canary', 'Components', ' ', 'Common (e.g. <div>)', ' ', '<form>', ' ', ' - This feature is available in the latest Canary', '<input>', ' ', '<option>', ' ', '<progress>', ' ', '<select>', ' ', '<textarea>', ' ', '<link>', ' ', ' - This feature is available in the latest Canary', '<meta>', ' ', ' - This feature is available in the latest Canary', '<script>', ' ', ' - This feature is available in the latest Canary', '<style>', ' ', ' - This feature is available in the latest Canary', '<title>', ' ', ' - This feature is available in the latest Canary', 'APIs', ' ', 'createPortal', ' ', 'flushSync', ' ', 'findDOMNode', ' ', 'hydrate', ' ', 'preconnect', ' ', ' - This feature is available in the latest Canary', 'prefetchDNS', ' ', ' - This feature is available in the latest Canary', 'preinit', ' ', ' - This feature is available in the latest Canary', 'preinitModule', ' ', ' - This feature is available in the latest Canary', 'preload', ' ', ' - This feature is available in the latest Canary', 'preloadModule', ' ', ' - This feature is available in the latest Canary', 'render', ' ', 'unmountComponentAtNode', ' ', 'Client APIs', ' ', 'createRoot', ' ', 'hydrateRoot', ' ', 'Server APIs', ' ', 'renderToNodeStream', ' ', 'renderToPipeableStream', ' ', 'renderToReadableStream', ' ', 'renderToStaticMarkup', ' ', 'renderToStaticNodeStream', ' ', 'renderToString', ' ', 'Rules of React', 'Overview', ' ', 'Components and Hooks must be pure', ' ', 'React calls Components and Hooks', ' ', 'Rules of Hooks', ' ', 'Legacy APIs', 'Legacy React APIs', ' ', 'Children', ' ', 'cloneElement', ' ', 'Component', ' ', 'createElement', ' ', 'createFactory', ' ', 'createRef', ' ', 'isValidElement', ' ', 'PureComponent', ' ', 'Is this page useful?', 'API Reference', 'APIs', 'lazy', 'lazy', ' lets you defer loading component‚Äôs code until it is rendered for the first time.', 'const', ' ', 'SomeComponent', ' = ', 'lazy', '(', 'load', ')', '\\n', 'Reference ', 'lazy(load)', ' ', 'load', ' function ', 'Usage ', 'Lazy-loading components with Suspense ', 'Troubleshooting ', 'My ', 'lazy', ' component‚Äôs state gets reset unexpectedly ', '\\n', '\\n', 'Reference ', '\\n', 'lazy(load)', ' ', '\\n', 'Call ', 'lazy', ' outside your components to declare a lazy-loaded React component:', '\\n', 'import', ' ', '{', ' ', 'lazy', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', 'const', ' ', 'MarkdownPreview', ' = ', 'lazy', '(', '(', ')', ' ', '=>', ' ', 'import', '(', \"'./MarkdownPreview.js'\", ')', ')', ';', '\\n', 'See more examples below.', '\\n', 'Parameters ', '\\n', '\\n', 'load', ': A function that returns a ', 'Promise', ' or another ', 'thenable', ' (a Promise-like object with a ', 'then', ' method). React will not call ', 'load', ' until the first time you attempt to render the returned component. After React first calls ', 'load', ', it will wait for it to resolve, and then render the resolved value‚Äôs ', '.default', ' as a React component. Both the returned Promise and the Promise‚Äôs resolved value will be cached, so React will not call ', 'load', ' more than once. If the Promise rejects, React will ', 'throw', ' the rejection reason for the nearest Error Boundary to handle.', '\\n', '\\n', 'Returns ', '\\n', 'lazy', ' returns a React component you can render in your tree. While the code for the lazy component is still loading, attempting to render it will ', 'suspend.', ' Use ', '<Suspense>', ' to display a loading indicator while it‚Äôs loading.', '\\n', '\\n', 'load', ' function ', '\\n', 'Parameters ', '\\n', 'load', ' receives no parameters.', '\\n', 'Returns ', '\\n', 'You need to return a ', 'Promise', ' or some other ', 'thenable', ' (a Promise-like object with a ', 'then', ' method). It needs to eventually resolve to an object whose ', '.default', ' property is a valid React component type, such as a function, ', 'memo', ', or a ', 'forwardRef', ' component.', '\\n', '\\n', 'Usage ', '\\n', 'Lazy-loading components with Suspense ', '\\n', 'Usually, you import components with the static ', 'import', ' declaration:', '\\n', 'import', ' ', 'MarkdownPreview', ' ', 'from', ' ', \"'./MarkdownPreview.js'\", ';', '\\n', 'To defer loading this component‚Äôs code until it‚Äôs rendered for the first time, replace this import with:', '\\n', 'import', ' ', '{', ' ', 'lazy', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', 'const', ' ', 'MarkdownPreview', ' = ', 'lazy', '(', '(', ')', ' ', '=>', ' ', 'import', '(', \"'./MarkdownPreview.js'\", ')', ')', ';', '\\n', 'This code relies on ', 'dynamic ', 'import()', ',', ' which might require support from your bundler or framework. Using this pattern requires that the lazy component you‚Äôre importing was exported as the ', 'default', ' export.', '\\n', 'Now that your component‚Äôs code loads on demand, you also need to specify what should be displayed while it is loading. You can do this by wrapping the lazy component or any of its parents into a ', '<Suspense>', ' boundary:', '\\n', '<', 'Suspense', ' ', 'fallback', '=', '{', '<', 'Loading', ' ', '/>', '}', '>', '  ', '<', 'h2', '>', 'Preview', '</', 'h2', '>', '  ', '<', 'MarkdownPreview', ' ', '/>', ' ', '</', 'Suspense', '>', '\\n', 'In this example, the code for ', 'MarkdownPreview', ' won‚Äôt be loaded until you attempt to render it. If ', 'MarkdownPreview', ' hasn‚Äôt loaded yet, ', 'Loading', ' will be shown in its place. Try ticking the checkbox:', '\\n', 'App.js', 'Loading.js', 'MarkdownPreview.js', 'App.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'useState', ',', ' ', 'Suspense', ',', ' ', 'lazy', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n', 'import', ' ', 'Loading', ' ', 'from', ' ', \"'./Loading.js'\", ';', '\\n\\n', 'const', ' ', 'MarkdownPreview', ' = ', 'lazy', '(', '(', ')', ' ', '=>', ' ', 'delayForDemo', '(', 'import', '(', \"'./MarkdownPreview.js'\", ')', ')', ')', ';', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'MarkdownEditor', '(', ')', ' ', '{', '\\n  ', 'const', ' ', '[', 'showPreview', ',', ' ', 'setShowPreview', ']', ' = ', 'useState', '(', 'false', ')', ';', '\\n  ', 'const', ' ', '[', 'markdown', ',', ' ', 'setMarkdown', ']', ' = ', 'useState', '(', \"'Hello, **world**!'\", ')', ';', '\\n  ', 'return', ' ', '(', '\\n    ', '<', '>', '\\n      ', '<', 'textarea', ' ', 'value', '=', '{', 'markdown', '}', ' ', 'onChange', '=', '{', 'e', ' ', '=>', ' ', 'setMarkdown', '(', 'e', '.', 'target', '.', 'value', ')', '}', ' ', '/>', '\\n      ', '<', 'label', '>', '\\n        ', '<', 'input', ' ', 'type', '=', '\"checkbox\"', ' ', 'checked', '=', '{', 'showPreview', '}', ' ', 'onChange', '=', '{', 'e', ' ', '=>', ' ', 'setShowPreview', '(', 'e', '.', 'target', '.', 'checked', ')', '}', ' ', '/>', '\\n        Show preview\\n      ', '</', 'label', '>', '\\n      ', '<', 'hr', ' ', '/>', '\\n      ', '{', 'showPreview', ' && ', '(', '\\n        ', '<', 'Suspense', ' ', 'fallback', '=', '{', '<', 'Loading', ' ', '/>', '}', '>', '\\n          ', '<', 'h2', '>', 'Preview', '</', 'h2', '>', '\\n          ', '<', 'MarkdownPreview', ' ', 'markdown', '=', '{', 'markdown', '}', ' ', '/>', '\\n        ', '</', 'Suspense', '>', '\\n      ', ')', '}', '\\n    ', '</', '>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', '// Add a fixed delay so you can see the loading state', '\\n', 'function', ' ', 'delayForDemo', '(', 'promise', ')', ' ', '{', '\\n  ', 'return', ' ', 'new', ' ', 'Promise', '(', 'resolve', ' ', '=>', ' ', '{', '\\n    ', 'setTimeout', '(', 'resolve', ',', ' ', '2000', ')', ';', '\\n  ', '}', ')', '.', 'then', '(', '(', ')', ' ', '=>', ' ', 'promise', ')', ';', '\\n', '}', '\\n\\n', 'Show more', '\\n', 'This demo loads with an artificial delay. The next time you untick and tick the checkbox, ', 'Preview', ' will be cached, so there will be no loading state. To see the loading state again, click ‚ÄúReset‚Äù on the sandbox.', '\\n', 'Learn more about managing loading states with Suspense.', '\\n', '\\n', 'Troubleshooting ', '\\n', 'My ', 'lazy', ' component‚Äôs state gets reset unexpectedly ', '\\n', 'Do not declare ', 'lazy', ' components ', 'inside', ' other components:', '\\n', 'import', ' ', '{', ' ', 'lazy', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', 'function', ' ', 'Editor', '(', ')', ' ', '{', '  ', '// üî¥ Bad: This will cause all state to be reset on re-renders', '  ', 'const', ' ', 'MarkdownPreview', ' = ', 'lazy', '(', '(', ')', ' ', '=>', ' ', 'import', '(', \"'./MarkdownPreview.js'\", ')', ')', ';', '  ', '// ...', '}', '\\n', 'Instead, always declare them at the top level of your module:', '\\n', 'import', ' ', '{', ' ', 'lazy', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '// ‚úÖ Good: Declare lazy components outside of your components', 'const', ' ', 'MarkdownPreview', ' = ', 'lazy', '(', '(', ')', ' ', '=>', ' ', 'import', '(', \"'./MarkdownPreview.js'\", ')', ')', ';', 'function', ' ', 'Editor', '(', ')', ' ', '{', '  ', '// ...', '}', 'Previous', 'forwardRef', 'Next', 'memo', 'How do you like these docs?', 'Take our survey!', '¬©', '2024', 'Learn React', 'Quick Start', 'Installation', 'Describing the UI', 'Adding Interactivity', 'Managing State', 'Escape Hatches', 'API Reference', 'React APIs', 'React DOM APIs', 'Community', 'Code of Conduct', 'Meet the Team', 'Docs Contributors', 'Acknowledgements', 'More', 'Blog', 'React Native', 'Privacy', 'Terms', 'On this page', 'Overview', 'Reference ', 'lazy(load)', ' ', 'load', ' function ', 'Usage ', 'Lazy-loading components with Suspense ', 'Troubleshooting ', 'My ', 'lazy', ' component‚Äôs state gets reset unexpectedly ', "}