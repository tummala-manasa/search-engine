{"id": 29, "url": "https://react.dev/reference/react/createFactory", "title": "createFactory", "content": "'createFactory – React', 'Stream React Conf on May 15-16.', 'Learn more.', 'React', 'Search', '⌘', 'Ctrl', 'K', 'Learn', 'Reference', 'Community', 'Blog', 'react@18.2.0', 'Overview', ' ', 'Hooks', ' ', 'use', ' ', ' - This feature is available in the latest Canary', 'useCallback', ' ', 'useContext', ' ', 'useDebugValue', ' ', 'useDeferredValue', ' ', 'useEffect', ' ', 'useId', ' ', 'useImperativeHandle', ' ', 'useInsertionEffect', ' ', 'useLayoutEffect', ' ', 'useMemo', ' ', 'useOptimistic', ' ', ' - This feature is available in the latest Canary', 'useReducer', ' ', 'useRef', ' ', 'useState', ' ', 'useSyncExternalStore', ' ', 'useTransition', ' ', 'Components', ' ', '<Fragment> (<>)', ' ', '<Profiler>', ' ', '<StrictMode>', ' ', '<Suspense>', ' ', 'APIs', ' ', 'cache', ' ', ' - This feature is available in the latest Canary', 'createContext', ' ', 'forwardRef', ' ', 'lazy', ' ', 'memo', ' ', 'startTransition', ' ', 'experimental_taintObjectReference', ' ', ' - This feature is available in the latest Canary', 'experimental_taintUniqueValue', ' ', ' - This feature is available in the latest Canary', 'Directives', ' ', ' - This feature is available in the latest Canary', \"'use client'\", ' ', ' - This feature is available in the latest Canary', \"'use server'\", ' ', ' - This feature is available in the latest Canary', 'react-dom@18.2.0', 'Hooks', ' ', 'useFormState', ' ', ' - This feature is available in the latest Canary', 'useFormStatus', ' ', ' - This feature is available in the latest Canary', 'Components', ' ', 'Common (e.g. <div>)', ' ', '<form>', ' ', ' - This feature is available in the latest Canary', '<input>', ' ', '<option>', ' ', '<progress>', ' ', '<select>', ' ', '<textarea>', ' ', '<link>', ' ', ' - This feature is available in the latest Canary', '<meta>', ' ', ' - This feature is available in the latest Canary', '<script>', ' ', ' - This feature is available in the latest Canary', '<style>', ' ', ' - This feature is available in the latest Canary', '<title>', ' ', ' - This feature is available in the latest Canary', 'APIs', ' ', 'createPortal', ' ', 'flushSync', ' ', 'findDOMNode', ' ', 'hydrate', ' ', 'preconnect', ' ', ' - This feature is available in the latest Canary', 'prefetchDNS', ' ', ' - This feature is available in the latest Canary', 'preinit', ' ', ' - This feature is available in the latest Canary', 'preinitModule', ' ', ' - This feature is available in the latest Canary', 'preload', ' ', ' - This feature is available in the latest Canary', 'preloadModule', ' ', ' - This feature is available in the latest Canary', 'render', ' ', 'unmountComponentAtNode', ' ', 'Client APIs', ' ', 'createRoot', ' ', 'hydrateRoot', ' ', 'Server APIs', ' ', 'renderToNodeStream', ' ', 'renderToPipeableStream', ' ', 'renderToReadableStream', ' ', 'renderToStaticMarkup', ' ', 'renderToStaticNodeStream', ' ', 'renderToString', ' ', 'Rules of React', 'Overview', ' ', 'Components and Hooks must be pure', ' ', 'React calls Components and Hooks', ' ', 'Rules of Hooks', ' ', 'Legacy APIs', 'Legacy React APIs', ' ', 'Children', ' ', 'cloneElement', ' ', 'Component', ' ', 'createElement', ' ', 'createFactory', ' ', 'createRef', ' ', 'isValidElement', ' ', 'PureComponent', ' ', 'Is this page useful?', 'API Reference', 'Legacy React APIs', 'createFactory', 'Deprecated', 'This API will be removed in a future major version of React. ', 'See the alternatives.', '\\n', 'createFactory', ' lets you create a function that produces React elements of a given type.', 'const', ' ', 'factory', ' = ', 'createFactory', '(', 'type', ')', '\\n', 'Reference ', 'createFactory(type)', ' ', 'Usage ', 'Creating React elements with a factory ', 'Alternatives ', 'Copying ', 'createFactory', ' into your project ', 'Replacing ', 'createFactory', ' with ', 'createElement', ' ', 'Replacing ', 'createFactory', ' with JSX ', '\\n', '\\n', 'Reference ', '\\n', 'createFactory(type)', ' ', '\\n', 'Call ', 'createFactory(type)', ' to create a factory function which produces React elements of a given ', 'type', '.', '\\n', 'import', ' ', '{', ' ', 'createFactory', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', 'const', ' ', 'button', ' = ', 'createFactory', '(', \"'button'\", ')', ';', '\\n', 'Then you can use it to create React elements without JSX:', '\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '  ', 'return', ' ', 'button', '(', '{', '    ', 'onClick', ':', ' ', '(', ')', ' ', '=>', ' ', '{', '      ', 'alert', '(', \"'Clicked!'\", ')', '    ', '}', '  ', '}', ',', ' ', \"'Click me'\", ')', ';', '}', '\\n', 'See more examples below.', '\\n', 'Parameters ', '\\n', '\\n', 'type', ': The ', 'type', ' argument must be a valid React component type. For example, it could be a tag name string (such as ', \"'div'\", ' or ', \"'span'\", '), or a React component (a function, a class, or a special component like ', 'Fragment', ').', '\\n', '\\n', 'Returns ', '\\n', 'Returns a factory function. That factory function receives a ', 'props', ' object as the first argument, followed by a list of ', '...children', ' arguments, and returns a React element with the given ', 'type', ', ', 'props', ' and ', 'children', '.', '\\n', '\\n', 'Usage ', '\\n', 'Creating React elements with a factory ', '\\n', 'Although most React projects use ', 'JSX', ' to describe the user interface, JSX is not required. In the past, ', 'createFactory', ' used to be one of the ways you could describe the user interface without JSX.', '\\n', 'Call ', 'createFactory', ' to create a ', 'factory function', ' for a specific element type like ', \"'button'\", ':', '\\n', 'import', ' ', '{', ' ', 'createFactory', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', 'const', ' ', 'button', ' = ', 'createFactory', '(', \"'button'\", ')', ';', '\\n', 'Calling that factory function will produce React elements with the props and children you have provided:', '\\n', 'App.js', 'App.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'createFactory', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n\\n', 'const', ' ', 'button', ' = ', 'createFactory', '(', \"'button'\", ')', ';', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '\\n  ', 'return', ' ', 'button', '(', '{', '\\n    ', 'onClick', ':', ' ', '(', ')', ' ', '=>', ' ', '{', '\\n      ', 'alert', '(', \"'Clicked!'\", ')', '\\n    ', '}', '\\n  ', '}', ',', ' ', \"'Click me'\", ')', ';', '\\n', '}', '\\n\\n', '\\n', 'This is how ', 'createFactory', ' was used as an alternative to JSX. However, ', 'createFactory', ' is deprecated, and you should not call ', 'createFactory', ' in any new code. See how to migrate away from ', 'createFactory', ' below.', '\\n', '\\n', 'Alternatives ', '\\n', 'Copying ', 'createFactory', ' into your project ', '\\n', 'If your project has many ', 'createFactory', ' calls, copy this ', 'createFactory.js', ' implementation into your project:', '\\n', 'App.js', 'createFactory.js', 'App.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'createFactory', ' ', '}', ' ', 'from', ' ', \"'./createFactory.js'\", ';', '\\n\\n', 'const', ' ', 'button', ' = ', 'createFactory', '(', \"'button'\", ')', ';', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '\\n  ', 'return', ' ', 'button', '(', '{', '\\n    ', 'onClick', ':', ' ', '(', ')', ' ', '=>', ' ', '{', '\\n      ', 'alert', '(', \"'Clicked!'\", ')', '\\n    ', '}', '\\n  ', '}', ',', ' ', \"'Click me'\", ')', ';', '\\n', '}', '\\n\\n', '\\n', 'This lets you keep all of your code unchanged except the imports.', '\\n', '\\n', 'Replacing ', 'createFactory', ' with ', 'createElement', ' ', '\\n', 'If you have a few ', 'createFactory', ' calls that you don’t mind porting manually, and you don’t want to use JSX, you can replace every call a factory function with a ', 'createElement', ' call. For example, you can replace this code:', '\\n', 'import', ' ', '{', ' ', 'createFactory', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', 'const', ' ', 'button', ' = ', 'createFactory', '(', \"'button'\", ')', ';', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '  ', 'return', ' ', 'button', '(', '{', '    ', 'onClick', ':', ' ', '(', ')', ' ', '=>', ' ', '{', '      ', 'alert', '(', \"'Clicked!'\", ')', '    ', '}', '  ', '}', ',', ' ', \"'Click me'\", ')', ';', '}', '\\n', 'with this code:', '\\n', 'import', ' ', '{', ' ', 'createElement', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '  ', 'return', ' ', 'createElement', '(', \"'button'\", ',', ' ', '{', '    ', 'onClick', ':', ' ', '(', ')', ' ', '=>', ' ', '{', '      ', 'alert', '(', \"'Clicked!'\", ')', '    ', '}', '  ', '}', ',', ' ', \"'Click me'\", ')', ';', '}', '\\n', 'Here is a complete example of using React without JSX:', '\\n', 'App.js', 'App.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'createElement', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '\\n  ', 'return', ' ', 'createElement', '(', \"'button'\", ',', ' ', '{', '\\n    ', 'onClick', ':', ' ', '(', ')', ' ', '=>', ' ', '{', '\\n      ', 'alert', '(', \"'Clicked!'\", ')', '\\n    ', '}', '\\n  ', '}', ',', ' ', \"'Click me'\", ')', ';', '\\n', '}', '\\n\\n', '\\n', '\\n', 'Replacing ', 'createFactory', ' with JSX ', '\\n', 'Finally, you can use JSX instead of ', 'createFactory', '. This is the most common way to use React:', '\\n', 'App.js', 'App.js', ' Reset', 'Fork', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '\\n  ', 'return', ' ', '(', '\\n    ', '<', 'button', ' ', 'onClick', '=', '{', '(', ')', ' ', '=>', ' ', '{', '\\n      ', 'alert', '(', \"'Clicked!'\", ')', ';', '\\n    ', '}', '}', '>', '\\n      Click me\\n    ', '</', 'button', '>', '\\n  ', ')', ';', '\\n', '}', ';', '\\n\\n', '\\n', 'Pitfall', 'Sometimes, your existing code might pass some variable as a ', 'type', ' instead of a constant like ', \"'button'\", ':', 'function', ' ', 'Heading', '(', '{', ' ', 'isSubheading', ',', ' ', '...', 'props', ' ', '}', ')', ' ', '{', '  ', 'const', ' ', 'type', ' = ', 'isSubheading', ' ? ', \"'h2'\", ' : ', \"'h1'\", ';', '  ', 'const', ' ', 'factory', ' = ', 'createFactory', '(', 'type', ')', ';', '  ', 'return', ' ', 'factory', '(', 'props', ')', ';', '}', 'To do the same in JSX, you need to rename your variable to start with an uppercase letter like ', 'Type', ':', 'function', ' ', 'Heading', '(', '{', ' ', 'isSubheading', ',', ' ', '...', 'props', ' ', '}', ')', ' ', '{', '  ', 'const', ' ', 'Type', ' = ', 'isSubheading', ' ? ', \"'h2'\", ' : ', \"'h1'\", ';', '  ', 'return', ' ', '<', 'Type', ' ', '{', '...', 'props', '}', ' ', '/>', ';', '}', 'Otherwise React will interpret ', '<type>', ' as a built-in HTML tag because it is lowercase.', 'Previous', 'createElement', 'Next', 'createRef', 'How do you like these docs?', 'Take our survey!', '©', '2024', 'Learn React', 'Quick Start', 'Installation', 'Describing the UI', 'Adding Interactivity', 'Managing State', 'Escape Hatches', 'API Reference', 'React APIs', 'React DOM APIs', 'Community', 'Code of Conduct', 'Meet the Team', 'Docs Contributors', 'Acknowledgements', 'More', 'Blog', 'React Native', 'Privacy', 'Terms', 'On this page', 'Overview', 'Reference ', 'createFactory(type)', ' ', 'Usage ', 'Creating React elements with a factory ', 'Alternatives ', 'Copying ', 'createFactory', ' into your project ', 'Replacing ', 'createFactory', ' with ', 'createElement', ' ', 'Replacing ', 'createFactory', ' with JSX ', "}