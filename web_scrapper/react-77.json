{"id": 77, "url": "https://react.dev/reference/react-dom/hooks/useFormStatus", "title": "useFormStatus", "content": "'useFormStatus â€“ React', 'Stream React Conf on May 15-16.', 'Learn more.', 'React', 'Search', 'âŒ˜', 'Ctrl', 'K', 'Learn', 'Reference', 'Community', 'Blog', 'react@18.2.0', 'Overview', ' ', 'Hooks', ' ', 'use', ' ', ' - This feature is available in the latest Canary', 'useCallback', ' ', 'useContext', ' ', 'useDebugValue', ' ', 'useDeferredValue', ' ', 'useEffect', ' ', 'useId', ' ', 'useImperativeHandle', ' ', 'useInsertionEffect', ' ', 'useLayoutEffect', ' ', 'useMemo', ' ', 'useOptimistic', ' ', ' - This feature is available in the latest Canary', 'useReducer', ' ', 'useRef', ' ', 'useState', ' ', 'useSyncExternalStore', ' ', 'useTransition', ' ', 'Components', ' ', '<Fragment> (<>)', ' ', '<Profiler>', ' ', '<StrictMode>', ' ', '<Suspense>', ' ', 'APIs', ' ', 'cache', ' ', ' - This feature is available in the latest Canary', 'createContext', ' ', 'forwardRef', ' ', 'lazy', ' ', 'memo', ' ', 'startTransition', ' ', 'experimental_taintObjectReference', ' ', ' - This feature is available in the latest Canary', 'experimental_taintUniqueValue', ' ', ' - This feature is available in the latest Canary', 'Directives', ' ', ' - This feature is available in the latest Canary', \"'use client'\", ' ', ' - This feature is available in the latest Canary', \"'use server'\", ' ', ' - This feature is available in the latest Canary', 'react-dom@18.2.0', 'Hooks', ' ', 'useFormState', ' ', ' - This feature is available in the latest Canary', 'useFormStatus', ' ', ' - This feature is available in the latest Canary', 'Components', ' ', 'Common (e.g. <div>)', ' ', '<form>', ' ', ' - This feature is available in the latest Canary', '<input>', ' ', '<option>', ' ', '<progress>', ' ', '<select>', ' ', '<textarea>', ' ', '<link>', ' ', ' - This feature is available in the latest Canary', '<meta>', ' ', ' - This feature is available in the latest Canary', '<script>', ' ', ' - This feature is available in the latest Canary', '<style>', ' ', ' - This feature is available in the latest Canary', '<title>', ' ', ' - This feature is available in the latest Canary', 'APIs', ' ', 'createPortal', ' ', 'flushSync', ' ', 'findDOMNode', ' ', 'hydrate', ' ', 'preconnect', ' ', ' - This feature is available in the latest Canary', 'prefetchDNS', ' ', ' - This feature is available in the latest Canary', 'preinit', ' ', ' - This feature is available in the latest Canary', 'preinitModule', ' ', ' - This feature is available in the latest Canary', 'preload', ' ', ' - This feature is available in the latest Canary', 'preloadModule', ' ', ' - This feature is available in the latest Canary', 'render', ' ', 'unmountComponentAtNode', ' ', 'Client APIs', ' ', 'createRoot', ' ', 'hydrateRoot', ' ', 'Server APIs', ' ', 'renderToNodeStream', ' ', 'renderToPipeableStream', ' ', 'renderToReadableStream', ' ', 'renderToStaticMarkup', ' ', 'renderToStaticNodeStream', ' ', 'renderToString', ' ', 'Rules of React', 'Overview', ' ', 'Components and Hooks must be pure', ' ', 'React calls Components and Hooks', ' ', 'Rules of Hooks', ' ', 'Legacy APIs', 'Legacy React APIs', ' ', 'Children', ' ', 'cloneElement', ' ', 'Component', ' ', 'createElement', ' ', 'createFactory', ' ', 'createRef', ' ', 'isValidElement', ' ', 'PureComponent', ' ', 'Is this page useful?', 'API Reference', 'Hooks', 'useFormStatus', ' - This feature is available in the latest Canary', 'Canary', 'The ', 'useFormStatus', ' Hook is currently only available in Reactâ€™s Canary and experimental channels. Learn more about ', 'Reactâ€™s release channels here', '.', '\\n', 'useFormStatus', ' is a Hook that gives you status information of the last form submission.', 'const', ' ', '{', ' ', 'pending', ',', ' ', 'data', ',', ' ', 'method', ',', ' ', 'action', ' ', '}', ' = ', 'useFormStatus', '(', ')', ';', '\\n', 'Reference ', 'useFormStatus()', ' ', 'Usage ', 'Display a pending state during form submission ', 'Read the form data being submitted ', 'Troubleshooting ', 'status.pending', ' is never ', 'true', ' ', '\\n', '\\n', 'Reference ', '\\n', 'useFormStatus()', ' ', '\\n', 'The ', 'useFormStatus', ' Hook provides status information of the last form submission.', '\\n', 'import', ' ', '{', ' ', 'useFormStatus', ' ', '}', ' ', 'from', ' ', '\"react-dom\"', ';', 'import', ' ', 'action', ' ', 'from', ' ', \"'./actions'\", ';', 'function', ' ', 'Submit', '(', ')', ' ', '{', '  ', 'const', ' ', 'status', ' = ', 'useFormStatus', '(', ')', ';', '  ', 'return', ' ', '<', 'button', ' ', 'disabled', '=', '{', 'status.pending', '}', '>', 'Submit', '</', 'button', '>', '}', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '  ', 'return', ' ', '(', '    ', '<', 'form', ' ', 'action', '=', '{', 'action', '}', '>', '      ', '<', 'Submit', ' ', '/>', '    ', '</', 'form', '>', '  ', ')', ';', '}', '\\n', 'To get status information, the ', 'Submit', ' component must be rendered within a ', '<form>', '. The Hook returns information like the ', 'pending', ' property which tells you if the form is actively submitting.', '\\n', 'In the above example, ', 'Submit', ' uses this information to disable ', '<button>', ' presses while the form is submitting.', '\\n', 'See more examples below.', '\\n', 'Parameters ', '\\n', 'useFormStatus', ' does not take any parameters.', '\\n', 'Returns ', '\\n', 'A ', 'status', ' object with the following properties:', '\\n', '\\n', '\\n', 'pending', ': A boolean. If ', 'true', ', this means the parent ', '<form>', ' is pending submission. Otherwise, ', 'false', '.', '\\n', '\\n', '\\n', 'data', ': An object implementing the ', 'FormData interface', ' that contains the data the parent ', '<form>', ' is submitting. If there is no active submission or no parent ', '<form>', ', it will be ', 'null', '.', '\\n', '\\n', '\\n', 'method', ': A string value of either ', \"'get'\", ' or ', \"'post'\", '. This represents whether the parent ', '<form>', ' is submitting with either a ', 'GET', ' or ', 'POST', ' ', 'HTTP method', '. By default, a ', '<form>', ' will use the ', 'GET', ' method and can be specified by the ', 'method', ' property.', '\\n', '\\n', '\\n', '\\n', 'action', ': A reference to the function passed to the ', 'action', ' prop on the parent ', '<form>', '. If there is no parent ', '<form>', ', the property is ', 'null', '. If there is a URI value provided to the ', 'action', ' prop, or no ', 'action', ' prop specified, ', 'status.action', ' will be ', 'null', '.', '\\n', '\\n', 'Caveats ', '\\n', '\\n', 'The ', 'useFormStatus', ' Hook must be called from a component that is rendered inside a ', '<form>', '.', '\\n', 'useFormStatus', ' will only return status information for a parent ', '<form>', '. It will not return status information for any ', '<form>', ' rendered in that same component or children components.', '\\n', '\\n', '\\n', 'Usage ', '\\n', 'Display a pending state during form submission ', '\\n', 'To display a pending state while a form is submitting, you can call the ', 'useFormStatus', ' Hook in a component rendered in a ', '<form>', ' and read the ', 'pending', ' property returned.', '\\n', 'Here, we use the ', 'pending', ' property to indicate the form is submitting.', '\\n', 'App.js', 'App.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'useFormStatus', ' ', '}', ' ', 'from', ' ', '\"react-dom\"', ';', '\\n', 'import', ' ', '{', ' ', 'submitForm', ' ', '}', ' ', 'from', ' ', '\"./actions.js\"', ';', '\\n\\n', 'function', ' ', 'Submit', '(', ')', ' ', '{', '\\n  ', 'const', ' ', '{', ' ', 'pending', ' ', '}', ' = ', 'useFormStatus', '(', ')', ';', '\\n  ', 'return', ' ', '(', '\\n    ', '<', 'button', ' ', 'type', '=', '\"submit\"', ' ', 'disabled', '=', '{', 'pending', '}', '>', '\\n      ', '{', 'pending', ' ? ', '\"Submitting...\"', ' : ', '\"Submit\"', '}', '\\n    ', '</', 'button', '>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', 'function', ' ', 'Form', '(', '{', ' ', 'action', ' ', '}', ')', ' ', '{', '\\n  ', 'return', ' ', '(', '\\n    ', '<', 'form', ' ', 'action', '=', '{', 'action', '}', '>', '\\n      ', '<', 'Submit', ' ', '/>', '\\n    ', '</', 'form', '>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '\\n  ', 'return', ' ', '<', 'Form', ' ', 'action', '=', '{', 'submitForm', '}', ' ', '/>', ';', '\\n', '}', '\\n\\n', 'Show more', '\\n', 'Pitfall', 'useFormStatus', ' will not return status information for a ', '<form>', ' rendered in the same component. ', 'The ', 'useFormStatus', ' Hook only returns status information for a parent ', '<form>', ' and not for any ', '<form>', ' rendered in the same component calling the Hook, or child components.', 'function', ' ', 'Form', '(', ')', ' ', '{', '  ', '// ðŸš© `pending` will never be true', '  ', '// useFormStatus does not track the form rendered in this component', '  ', 'const', ' ', '{', ' ', 'pending', ' ', '}', ' = ', 'useFormStatus', '(', ')', ';', '  ', 'return', ' ', '<', 'form', ' ', 'action', '=', '{', 'submit', '}', '>', '</', 'form', '>', ';', '}', 'Instead call ', 'useFormStatus', ' from inside a component that is located inside ', '<form>', '.', 'function', ' ', 'Submit', '(', ')', ' ', '{', '  ', '// âœ… `pending` will be derived from the form that wraps the Submit component', '  ', 'const', ' ', '{', ' ', 'pending', ' ', '}', ' = ', 'useFormStatus', '(', ')', ';', ' ', '  ', 'return', ' ', '<', 'button', ' ', 'disabled', '=', '{', 'pending', '}', '>', '...', '</', 'button', '>', ';', '}', 'function', ' ', 'Form', '(', ')', ' ', '{', '  ', '// This is the <form> `useFormStatus` tracks', '  ', 'return', ' ', '(', '    ', '<', 'form', ' ', 'action', '=', '{', 'submit', '}', '>', '      ', '<', 'Submit', ' ', '/>', '    ', '</', 'form', '>', '  ', ')', ';', '}', '\\n', 'Read the form data being submitted ', '\\n', 'You can use the ', 'data', ' property of the status information returned from ', 'useFormStatus', ' to display what data is being submitted by the user.', '\\n', 'Here, we have a form where users can request a username. We can use ', 'useFormStatus', ' to display a temporary status message confirming what username they have requested.', '\\n', 'UsernameForm.js', 'App.js', 'UsernameForm.js', ' Reset', 'Fork', 'import', ' ', '{', 'useState', ',', ' ', 'useMemo', ',', ' ', 'useRef', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n', 'import', ' ', '{', 'useFormStatus', '}', ' ', 'from', ' ', \"'react-dom'\", ';', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'UsernameForm', '(', ')', ' ', '{', '\\n  ', 'const', ' ', '{', 'pending', ',', ' ', 'data', '}', ' = ', 'useFormStatus', '(', ')', ';', '\\n\\n  ', 'return', ' ', '(', '\\n    ', '<', 'div', '>', '\\n      ', '<', 'h3', '>', 'Request a Username: ', '</', 'h3', '>', '\\n      ', '<', 'input', ' ', 'type', '=', '\"text\"', ' ', 'name', '=', '\"username\"', ' ', 'disabled', '=', '{', 'pending', '}', '/>', '\\n      ', '<', 'button', ' ', 'type', '=', '\"submit\"', ' ', 'disabled', '=', '{', 'pending', '}', '>', '\\n        Submit\\n      ', '</', 'button', '>', '\\n      ', '<', 'br', ' ', '/>', '\\n      ', '<', 'p', '>', '{', 'data', ' ? ', '`Requesting ', '${', 'data', '?.', 'get', '(', '\"username\"', ')', '}', '...`', ': ', \"''\", '}', '</', 'p', '>', '\\n    ', '</', 'div', '>', '\\n  ', ')', ';', '\\n', '}', '\\n\\n', 'Show more', '\\n', '\\n', 'Troubleshooting ', '\\n', 'status.pending', ' is never ', 'true', ' ', '\\n', 'useFormStatus', ' will only return status information for a parent ', '<form>', '.', '\\n', 'If the component that calls ', 'useFormStatus', ' is not nested in a ', '<form>', ', ', 'status.pending', ' will always return ', 'false', '. Verify ', 'useFormStatus', ' is called in a component that is a child of a ', '<form>', ' element.', '\\n', 'useFormStatus', ' will not track the status of a ', '<form>', ' rendered in the same component. See ', 'Pitfall', ' for more details.', 'Previous', 'useFormState', 'Next', 'Components', 'How do you like these docs?', 'Take our survey!', 'Â©', '2024', 'Learn React', 'Quick Start', 'Installation', 'Describing the UI', 'Adding Interactivity', 'Managing State', 'Escape Hatches', 'API Reference', 'React APIs', 'React DOM APIs', 'Community', 'Code of Conduct', 'Meet the Team', 'Docs Contributors', 'Acknowledgements', 'More', 'Blog', 'React Native', 'Privacy', 'Terms', 'On this page', 'Overview', 'Reference ', 'useFormStatus()', ' ', 'Usage ', 'Display a pending state during form submission ', 'Read the form data being submitted ', 'Troubleshooting ', 'status.pending', ' is never ', 'true', ' ', "}