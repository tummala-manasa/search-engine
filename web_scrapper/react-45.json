{"id": 45, "url": "https://react.dev/reference/react-dom/server/renderToNodeStream", "title": "renderToNodeStream", "content": "'renderToNodeStream – React', 'Stream React Conf on May 15-16.', 'Learn more.', 'React', 'Search', '⌘', 'Ctrl', 'K', 'Learn', 'Reference', 'Community', 'Blog', 'react@18.2.0', 'Overview', ' ', 'Hooks', ' ', 'use', ' ', ' - This feature is available in the latest Canary', 'useCallback', ' ', 'useContext', ' ', 'useDebugValue', ' ', 'useDeferredValue', ' ', 'useEffect', ' ', 'useId', ' ', 'useImperativeHandle', ' ', 'useInsertionEffect', ' ', 'useLayoutEffect', ' ', 'useMemo', ' ', 'useOptimistic', ' ', ' - This feature is available in the latest Canary', 'useReducer', ' ', 'useRef', ' ', 'useState', ' ', 'useSyncExternalStore', ' ', 'useTransition', ' ', 'Components', ' ', '<Fragment> (<>)', ' ', '<Profiler>', ' ', '<StrictMode>', ' ', '<Suspense>', ' ', 'APIs', ' ', 'cache', ' ', ' - This feature is available in the latest Canary', 'createContext', ' ', 'forwardRef', ' ', 'lazy', ' ', 'memo', ' ', 'startTransition', ' ', 'experimental_taintObjectReference', ' ', ' - This feature is available in the latest Canary', 'experimental_taintUniqueValue', ' ', ' - This feature is available in the latest Canary', 'Directives', ' ', ' - This feature is available in the latest Canary', \"'use client'\", ' ', ' - This feature is available in the latest Canary', \"'use server'\", ' ', ' - This feature is available in the latest Canary', 'react-dom@18.2.0', 'Hooks', ' ', 'useFormState', ' ', ' - This feature is available in the latest Canary', 'useFormStatus', ' ', ' - This feature is available in the latest Canary', 'Components', ' ', 'Common (e.g. <div>)', ' ', '<form>', ' ', ' - This feature is available in the latest Canary', '<input>', ' ', '<option>', ' ', '<progress>', ' ', '<select>', ' ', '<textarea>', ' ', '<link>', ' ', ' - This feature is available in the latest Canary', '<meta>', ' ', ' - This feature is available in the latest Canary', '<script>', ' ', ' - This feature is available in the latest Canary', '<style>', ' ', ' - This feature is available in the latest Canary', '<title>', ' ', ' - This feature is available in the latest Canary', 'APIs', ' ', 'createPortal', ' ', 'flushSync', ' ', 'findDOMNode', ' ', 'hydrate', ' ', 'preconnect', ' ', ' - This feature is available in the latest Canary', 'prefetchDNS', ' ', ' - This feature is available in the latest Canary', 'preinit', ' ', ' - This feature is available in the latest Canary', 'preinitModule', ' ', ' - This feature is available in the latest Canary', 'preload', ' ', ' - This feature is available in the latest Canary', 'preloadModule', ' ', ' - This feature is available in the latest Canary', 'render', ' ', 'unmountComponentAtNode', ' ', 'Client APIs', ' ', 'createRoot', ' ', 'hydrateRoot', ' ', 'Server APIs', ' ', 'renderToNodeStream', ' ', 'renderToPipeableStream', ' ', 'renderToReadableStream', ' ', 'renderToStaticMarkup', ' ', 'renderToStaticNodeStream', ' ', 'renderToString', ' ', 'Rules of React', 'Overview', ' ', 'Components and Hooks must be pure', ' ', 'React calls Components and Hooks', ' ', 'Rules of Hooks', ' ', 'Legacy APIs', 'Legacy React APIs', ' ', 'Children', ' ', 'cloneElement', ' ', 'Component', ' ', 'createElement', ' ', 'createFactory', ' ', 'createRef', ' ', 'isValidElement', ' ', 'PureComponent', ' ', 'Is this page useful?', 'API Reference', 'Server APIs', 'renderToNodeStream', 'Deprecated', 'This API will be removed in a future major version of React. Use ', 'renderToPipeableStream', ' instead.', '\\n', 'renderToNodeStream', ' renders a React tree to a ', 'Node.js Readable Stream.', 'const', ' ', 'stream', ' = ', 'renderToNodeStream', '(', 'reactNode', ',', ' ', 'options', '?', ')', '\\n', 'Reference ', 'renderToNodeStream(reactNode, options?)', ' ', 'Usage ', 'Rendering a React tree as HTML to a Node.js Readable Stream ', '\\n', '\\n', 'Reference ', '\\n', 'renderToNodeStream(reactNode, options?)', ' ', '\\n', 'On the server, call ', 'renderToNodeStream', ' to get a ', 'Node.js Readable Stream', ' which you can pipe into the response.', '\\n', 'import', ' ', '{', ' ', 'renderToNodeStream', ' ', '}', ' ', 'from', ' ', \"'react-dom/server'\", ';', 'const', ' ', 'stream', ' = ', 'renderToNodeStream', '(', '<', 'App', ' ', '/>', ')', ';', 'stream', '.', 'pipe', '(', 'response', ')', ';', '\\n', 'On the client, call ', 'hydrateRoot', ' to make the server-generated HTML interactive.', '\\n', 'See more examples below.', '\\n', 'Parameters ', '\\n', '\\n', '\\n', 'reactNode', ': A React node you want to render to HTML. For example, a JSX element like ', '<App />', '.', '\\n', '\\n', '\\n', 'optional', ' ', 'options', ': An object for server render.', '\\n', '\\n', 'optional', ' ', 'identifierPrefix', ': A string prefix React uses for IDs generated by ', 'useId', '.', ' Useful to avoid conflicts when using multiple roots on the same page. Must be the same prefix as passed to ', 'hydrateRoot', '.', '\\n', '\\n', '\\n', '\\n', 'Returns ', '\\n', 'A ', 'Node.js Readable Stream', ' that outputs an HTML string.', '\\n', 'Caveats ', '\\n', '\\n', '\\n', 'This method will wait for all ', 'Suspense boundaries', ' to complete before returning any output.', '\\n', '\\n', '\\n', 'As of React 18, this method buffers all of its output, so it doesn’t actually provide any streaming benefits. This is why it’s recommended that you migrate to ', 'renderToPipeableStream', ' instead.', '\\n', '\\n', '\\n', 'The returned stream is a byte stream encoded in utf-8. If you need a stream in another encoding, take a look at a project like ', 'iconv-lite', ', which provides transform streams for transcoding text.', '\\n', '\\n', '\\n', '\\n', 'Usage ', '\\n', 'Rendering a React tree as HTML to a Node.js Readable Stream ', '\\n', 'Call ', 'renderToNodeStream', ' to get a ', 'Node.js Readable Stream', ' which you can pipe to your server response:', '\\n', 'import', ' ', '{', ' ', 'renderToNodeStream', ' ', '}', ' ', 'from', ' ', \"'react-dom/server'\", ';', '// The route handler syntax depends on your backend framework', 'app', '.', 'use', '(', \"'/'\", ',', ' ', '(', 'request', ',', ' ', 'response', ')', ' ', '=>', ' ', '{', '  ', 'const', ' ', 'stream', ' = ', 'renderToNodeStream', '(', '<', 'App', ' ', '/>', ')', ';', '  ', 'stream', '.', 'pipe', '(', 'response', ')', ';', '}', ')', ';', '\\n', 'The stream will produce the initial non-interactive HTML output of your React components. On the client, you will need to call ', 'hydrateRoot', ' to ', 'hydrate', ' that server-generated HTML and make it interactive.', 'Previous', 'Server APIs', 'Next', 'renderToPipeableStream', 'How do you like these docs?', 'Take our survey!', '©', '2024', 'Learn React', 'Quick Start', 'Installation', 'Describing the UI', 'Adding Interactivity', 'Managing State', 'Escape Hatches', 'API Reference', 'React APIs', 'React DOM APIs', 'Community', 'Code of Conduct', 'Meet the Team', 'Docs Contributors', 'Acknowledgements', 'More', 'Blog', 'React Native', 'Privacy', 'Terms', 'On this page', 'Overview', 'Reference ', 'renderToNodeStream(reactNode, options?)', ' ', 'Usage ', 'Rendering a React tree as HTML to a Node.js Readable Stream ', "}