{"id": 58, "url": "https://react.dev/reference/react-dom/findDOMNode", "title": "findDOMNode", "content": "'findDOMNode – React', 'Stream React Conf on May 15-16.', 'Learn more.', 'React', 'Search', '⌘', 'Ctrl', 'K', 'Learn', 'Reference', 'Community', 'Blog', 'react@18.2.0', 'Overview', ' ', 'Hooks', ' ', 'use', ' ', ' - This feature is available in the latest Canary', 'useCallback', ' ', 'useContext', ' ', 'useDebugValue', ' ', 'useDeferredValue', ' ', 'useEffect', ' ', 'useId', ' ', 'useImperativeHandle', ' ', 'useInsertionEffect', ' ', 'useLayoutEffect', ' ', 'useMemo', ' ', 'useOptimistic', ' ', ' - This feature is available in the latest Canary', 'useReducer', ' ', 'useRef', ' ', 'useState', ' ', 'useSyncExternalStore', ' ', 'useTransition', ' ', 'Components', ' ', '<Fragment> (<>)', ' ', '<Profiler>', ' ', '<StrictMode>', ' ', '<Suspense>', ' ', 'APIs', ' ', 'cache', ' ', ' - This feature is available in the latest Canary', 'createContext', ' ', 'forwardRef', ' ', 'lazy', ' ', 'memo', ' ', 'startTransition', ' ', 'experimental_taintObjectReference', ' ', ' - This feature is available in the latest Canary', 'experimental_taintUniqueValue', ' ', ' - This feature is available in the latest Canary', 'Directives', ' ', ' - This feature is available in the latest Canary', \"'use client'\", ' ', ' - This feature is available in the latest Canary', \"'use server'\", ' ', ' - This feature is available in the latest Canary', 'react-dom@18.2.0', 'Hooks', ' ', 'useFormState', ' ', ' - This feature is available in the latest Canary', 'useFormStatus', ' ', ' - This feature is available in the latest Canary', 'Components', ' ', 'Common (e.g. <div>)', ' ', '<form>', ' ', ' - This feature is available in the latest Canary', '<input>', ' ', '<option>', ' ', '<progress>', ' ', '<select>', ' ', '<textarea>', ' ', '<link>', ' ', ' - This feature is available in the latest Canary', '<meta>', ' ', ' - This feature is available in the latest Canary', '<script>', ' ', ' - This feature is available in the latest Canary', '<style>', ' ', ' - This feature is available in the latest Canary', '<title>', ' ', ' - This feature is available in the latest Canary', 'APIs', ' ', 'createPortal', ' ', 'flushSync', ' ', 'findDOMNode', ' ', 'hydrate', ' ', 'preconnect', ' ', ' - This feature is available in the latest Canary', 'prefetchDNS', ' ', ' - This feature is available in the latest Canary', 'preinit', ' ', ' - This feature is available in the latest Canary', 'preinitModule', ' ', ' - This feature is available in the latest Canary', 'preload', ' ', ' - This feature is available in the latest Canary', 'preloadModule', ' ', ' - This feature is available in the latest Canary', 'render', ' ', 'unmountComponentAtNode', ' ', 'Client APIs', ' ', 'createRoot', ' ', 'hydrateRoot', ' ', 'Server APIs', ' ', 'renderToNodeStream', ' ', 'renderToPipeableStream', ' ', 'renderToReadableStream', ' ', 'renderToStaticMarkup', ' ', 'renderToStaticNodeStream', ' ', 'renderToString', ' ', 'Rules of React', 'Overview', ' ', 'Components and Hooks must be pure', ' ', 'React calls Components and Hooks', ' ', 'Rules of Hooks', ' ', 'Legacy APIs', 'Legacy React APIs', ' ', 'Children', ' ', 'cloneElement', ' ', 'Component', ' ', 'createElement', ' ', 'createFactory', ' ', 'createRef', ' ', 'isValidElement', ' ', 'PureComponent', ' ', 'Is this page useful?', 'API Reference', 'APIs', 'findDOMNode', 'Deprecated', 'This API will be removed in a future major version of React. ', 'See the alternatives.', '\\n', 'findDOMNode', ' finds the browser DOM node for a React ', 'class component', ' instance.', 'const', ' ', 'domNode', ' = ', 'findDOMNode', '(', 'componentInstance', ')', '\\n', 'Reference ', 'findDOMNode(componentInstance)', ' ', 'Usage ', 'Finding the root DOM node of a class component ', 'Alternatives ', 'Reading component’s own DOM node from a ref ', 'Reading a child component’s DOM node from a forwarded ref ', 'Adding a wrapper ', '<div>', ' element ', '\\n', '\\n', 'Reference ', '\\n', 'findDOMNode(componentInstance)', ' ', '\\n', 'Call ', 'findDOMNode', ' to find the browser DOM node for a given React ', 'class component', ' instance.', '\\n', 'import', ' ', '{', ' ', 'findDOMNode', ' ', '}', ' ', 'from', ' ', \"'react-dom'\", ';', 'const', ' ', 'domNode', ' = ', 'findDOMNode', '(', 'componentInstance', ')', ';', '\\n', 'See more examples below.', '\\n', 'Parameters ', '\\n', '\\n', 'componentInstance', ': An instance of the ', 'Component', ' subclass. For example, ', 'this', ' inside a class component.', '\\n', '\\n', 'Returns ', '\\n', 'findDOMNode', ' returns the first closest browser DOM node within the given ', 'componentInstance', '. When a component renders to ', 'null', ', or renders ', 'false', ', ', 'findDOMNode', ' returns ', 'null', '. When a component renders to a string, ', 'findDOMNode', ' returns a text DOM node containing that value.', '\\n', 'Caveats ', '\\n', '\\n', '\\n', 'A component may return an array or a ', 'Fragment', ' with multiple children. In that case ', 'findDOMNode', ', will return the DOM node corresponding to the first non-empty child.', '\\n', '\\n', '\\n', 'findDOMNode', ' only works on mounted components (that is, components that have been placed in the DOM). If you try to call this on a component that has not been mounted yet (like calling ', 'findDOMNode()', ' in ', 'render()', ' on a component that has yet to be created), an exception will be thrown.', '\\n', '\\n', '\\n', 'findDOMNode', ' only returns the result at the time of your call. If a child component renders a different node later, there is no way for you to be notified of this change.', '\\n', '\\n', '\\n', 'findDOMNode', ' accepts a class component instance, so it can’t be used with function components.', '\\n', '\\n', '\\n', '\\n', 'Usage ', '\\n', 'Finding the root DOM node of a class component ', '\\n', 'Call ', 'findDOMNode', ' with a ', 'class component', ' instance (usually, ', 'this', ') to find the DOM node it has rendered.', '\\n', 'class', ' AutoselectingInput ', 'extends', ' ', 'Component', ' ', '{', '  ', 'componentDidMount', '(', ')', ' ', '{', '    ', 'const', ' ', 'input', ' = ', 'findDOMNode', '(', 'this', ')', ';', '    ', 'input', '.', 'select', '(', ')', '  ', '}', '  ', 'render', '(', ')', ' ', '{', '    ', 'return', ' ', '<', 'input', ' ', 'defaultValue', '=', '\"Hello\"', ' ', '/>', '  ', '}', '}', '\\n', 'Here, the ', 'input', ' variable will be set to the ', '<input>', ' DOM element. This lets you do something with it. For example, when clicking “Show example” below mounts the input, ', 'input.select()', ' selects all text in the input:', '\\n', 'App.js', 'AutoselectingInput.js', 'AutoselectingInput.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'Component', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n', 'import', ' ', '{', ' ', 'findDOMNode', ' ', '}', ' ', 'from', ' ', \"'react-dom'\", ';', '\\n\\n', 'class', ' AutoselectingInput ', 'extends', ' ', 'Component', ' ', '{', '\\n  ', 'componentDidMount', '(', ')', ' ', '{', '\\n    ', 'const', ' ', 'input', ' = ', 'findDOMNode', '(', 'this', ')', ';', '\\n    ', 'input', '.', 'select', '(', ')', '\\n  ', '}', '\\n\\n  ', 'render', '(', ')', ' ', '{', '\\n    ', 'return', ' ', '<', 'input', ' ', 'defaultValue', '=', '\"Hello\"', ' ', '/>', '\\n  ', '}', '\\n', '}', '\\n\\n', 'export', ' ', 'default', ' ', 'AutoselectingInput', ';', '\\n\\n', '\\n', '\\n', 'Alternatives ', '\\n', 'Reading component’s own DOM node from a ref ', '\\n', 'Code using ', 'findDOMNode', ' is fragile because the connection between the JSX node and the code manipulating the corresponding DOM node is not explicit. For example, try wrapping this ', '<input />', ' into a ', '<div>', ':', '\\n', 'App.js', 'AutoselectingInput.js', 'AutoselectingInput.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'Component', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n', 'import', ' ', '{', ' ', 'findDOMNode', ' ', '}', ' ', 'from', ' ', \"'react-dom'\", ';', '\\n\\n', 'class', ' AutoselectingInput ', 'extends', ' ', 'Component', ' ', '{', '\\n  ', 'componentDidMount', '(', ')', ' ', '{', '\\n    ', 'const', ' ', 'input', ' = ', 'findDOMNode', '(', 'this', ')', ';', '\\n    ', 'input', '.', 'select', '(', ')', '\\n  ', '}', '\\n  ', 'render', '(', ')', ' ', '{', '\\n    ', 'return', ' ', '<', 'input', ' ', 'defaultValue', '=', '\"Hello\"', ' ', '/>', '\\n  ', '}', '\\n', '}', '\\n\\n', 'export', ' ', 'default', ' ', 'AutoselectingInput', ';', '\\n\\n', '\\n', 'This will break the code because now, ', 'findDOMNode(this)', ' finds the ', '<div>', ' DOM node, but the code expects an ', '<input>', ' DOM node. To avoid these kinds of problems, use ', 'createRef', ' to manage a specific DOM node.', '\\n', 'In this example, ', 'findDOMNode', ' is no longer used. Instead, ', 'inputRef = createRef(null)', ' is defined as an instance field on the class. To read the DOM node from it, you can use ', 'this.inputRef.current', '. To attach it to the JSX, you render ', '<input ref={this.inputRef} />', '. This connects the code using the DOM node to its JSX:', '\\n', 'App.js', 'AutoselectingInput.js', 'AutoselectingInput.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'createRef', ',', ' ', 'Component', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n\\n', 'class', ' AutoselectingInput ', 'extends', ' ', 'Component', ' ', '{', '\\n  ', 'inputRef', ' = ', 'createRef', '(', 'null', ')', ';', '\\n\\n  ', 'componentDidMount', '(', ')', ' ', '{', '\\n    ', 'const', ' ', 'input', ' = ', 'this', '.', 'inputRef', '.', 'current', ';', '\\n    ', 'input', '.', 'select', '(', ')', '\\n  ', '}', '\\n\\n  ', 'render', '(', ')', ' ', '{', '\\n    ', 'return', ' ', '(', '\\n      ', '<', 'input', ' ', 'ref', '=', '{', 'this', '.', 'inputRef', '}', ' ', 'defaultValue', '=', '\"Hello\"', ' ', '/>', '\\n    ', ')', ';', '\\n  ', '}', '\\n', '}', '\\n\\n', 'export', ' ', 'default', ' ', 'AutoselectingInput', ';', '\\n\\n', 'Show more', '\\n', 'In modern React without class components, the equivalent code would call ', 'useRef', ' instead:', '\\n', 'App.js', 'AutoselectingInput.js', 'AutoselectingInput.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'useRef', ',', ' ', 'useEffect', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'AutoselectingInput', '(', ')', ' ', '{', '\\n  ', 'const', ' ', 'inputRef', ' = ', 'useRef', '(', 'null', ')', ';', '\\n\\n  ', 'useEffect', '(', '(', ')', ' ', '=>', ' ', '{', '\\n    ', 'const', ' ', 'input', ' = ', 'inputRef', '.', 'current', ';', '\\n    ', 'input', '.', 'select', '(', ')', ';', '\\n  ', '}', ',', ' ', '[', ']', ')', ';', '\\n\\n  ', 'return', ' ', '<', 'input', ' ', 'ref', '=', '{', 'inputRef', '}', ' ', 'defaultValue', '=', '\"Hello\"', ' ', '/>', '\\n', '}', '\\n\\n', '\\n', 'Read more about manipulating the DOM with refs.', '\\n', '\\n', 'Reading a child component’s DOM node from a forwarded ref ', '\\n', 'In this example, ', 'findDOMNode(this)', ' finds a DOM node that belongs to another component. The ', 'AutoselectingInput', ' renders ', 'MyInput', ', which is your own component that renders a browser ', '<input>', '.', '\\n', 'App.js', 'AutoselectingInput.js', 'MyInput.js', 'AutoselectingInput.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'Component', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n', 'import', ' ', '{', ' ', 'findDOMNode', ' ', '}', ' ', 'from', ' ', \"'react-dom'\", ';', '\\n', 'import', ' ', 'MyInput', ' ', 'from', ' ', \"'./MyInput.js'\", ';', '\\n\\n', 'class', ' AutoselectingInput ', 'extends', ' ', 'Component', ' ', '{', '\\n  ', 'componentDidMount', '(', ')', ' ', '{', '\\n    ', 'const', ' ', 'input', ' = ', 'findDOMNode', '(', 'this', ')', ';', '\\n    ', 'input', '.', 'select', '(', ')', '\\n  ', '}', '\\n  ', 'render', '(', ')', ' ', '{', '\\n    ', 'return', ' ', '<', 'MyInput', ' ', '/>', ';', '\\n  ', '}', '\\n', '}', '\\n\\n', 'export', ' ', 'default', ' ', 'AutoselectingInput', ';', '\\n\\n', '\\n', 'Notice that calling ', 'findDOMNode(this)', ' inside ', 'AutoselectingInput', ' still gives you the DOM ', '<input>', '—even though the JSX for this ', '<input>', ' is hidden inside the ', 'MyInput', ' component. This seems convenient for the above example, but it leads to fragile code. Imagine that you wanted to edit ', 'MyInput', ' later and add a wrapper ', '<div>', ' around it. This would break the code of ', 'AutoselectingInput', ' (which expects to find an ', '<input>', ').', '\\n', 'To replace ', 'findDOMNode', ' in this example, the two components need to coordinate:', '\\n', '\\n', 'AutoSelectingInput', ' should declare a ref, like ', 'in the earlier example', ', and pass it to ', '<MyInput>', '.', '\\n', 'MyInput', ' should be declared with ', 'forwardRef', ' to take that ref and forward it down to the ', '<input>', ' node.', '\\n', '\\n', 'This version does that, so it no longer needs ', 'findDOMNode', ':', '\\n', 'App.js', 'AutoselectingInput.js', 'MyInput.js', 'AutoselectingInput.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'createRef', ',', ' ', 'Component', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n', 'import', ' ', 'MyInput', ' ', 'from', ' ', \"'./MyInput.js'\", ';', '\\n\\n', 'class', ' AutoselectingInput ', 'extends', ' ', 'Component', ' ', '{', '\\n  ', 'inputRef', ' = ', 'createRef', '(', 'null', ')', ';', '\\n\\n  ', 'componentDidMount', '(', ')', ' ', '{', '\\n    ', 'const', ' ', 'input', ' = ', 'this', '.', 'inputRef', '.', 'current', ';', '\\n    ', 'input', '.', 'select', '(', ')', '\\n  ', '}', '\\n\\n  ', 'render', '(', ')', ' ', '{', '\\n    ', 'return', ' ', '(', '\\n      ', '<', 'MyInput', ' ', 'ref', '=', '{', 'this', '.', 'inputRef', '}', ' ', '/>', '\\n    ', ')', ';', '\\n  ', '}', '\\n', '}', '\\n\\n', 'export', ' ', 'default', ' ', 'AutoselectingInput', ';', '\\n\\n', 'Show more', '\\n', 'Here is how this code would look like with function components instead of classes:', '\\n', 'App.js', 'AutoselectingInput.js', 'MyInput.js', 'AutoselectingInput.js', ' Reset', 'Fork', 'import', ' ', '{', ' ', 'useRef', ',', ' ', 'useEffect', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', '\\n', 'import', ' ', 'MyInput', ' ', 'from', ' ', \"'./MyInput.js'\", ';', '\\n\\n', 'export', ' ', 'default', ' ', 'function', ' ', 'AutoselectingInput', '(', ')', ' ', '{', '\\n  ', 'const', ' ', 'inputRef', ' = ', 'useRef', '(', 'null', ')', ';', '\\n\\n  ', 'useEffect', '(', '(', ')', ' ', '=>', ' ', '{', '\\n    ', 'const', ' ', 'input', ' = ', 'inputRef', '.', 'current', ';', '\\n    ', 'input', '.', 'select', '(', ')', ';', '\\n  ', '}', ',', ' ', '[', ']', ')', ';', '\\n\\n  ', 'return', ' ', '<', 'MyInput', ' ', 'ref', '=', '{', 'inputRef', '}', ' ', 'defaultValue', '=', '\"Hello\"', ' ', '/>', '\\n', '}', '\\n\\n', '\\n', '\\n', 'Adding a wrapper ', '<div>', ' element ', '\\n', 'Sometimes a component needs to know the position and size of its children. This makes it tempting to find the children with ', 'findDOMNode(this)', ', and then use DOM methods like ', 'getBoundingClientRect', ' for measurements.', '\\n', 'There is currently no direct equivalent for this use case, which is why ', 'findDOMNode', ' is deprecated but is not yet removed completely from React. In the meantime, you can try rendering a wrapper ', '<div>', ' node around the content as a workaround, and getting a ref to that node. However, extra wrappers can break styling.', '\\n', '<', 'div', ' ', 'ref', '=', '{', 'someRef', '}', '>', '  ', '{', 'children', '}', '</', 'div', '>', '\\n', 'This also applies to focusing and scrolling to arbitrary children.', 'Previous', 'flushSync', 'Next', 'hydrate', 'How do you like these docs?', 'Take our survey!', '©', '2024', 'Learn React', 'Quick Start', 'Installation', 'Describing the UI', 'Adding Interactivity', 'Managing State', 'Escape Hatches', 'API Reference', 'React APIs', 'React DOM APIs', 'Community', 'Code of Conduct', 'Meet the Team', 'Docs Contributors', 'Acknowledgements', 'More', 'Blog', 'React Native', 'Privacy', 'Terms', 'On this page', 'Overview', 'Reference ', 'findDOMNode(componentInstance)', ' ', 'Usage ', 'Finding the root DOM node of a class component ', 'Alternatives ', 'Reading component’s own DOM node from a ref ', 'Reading a child component’s DOM node from a forwarded ref ', 'Adding a wrapper ', '<div>', ' element ', "}