{"id": 80, "url": "https://react.dev/reference/react/use-server", "title": "'use server'", "content": "\"'use server' directive – React\", 'Stream React Conf on May 15-16.', 'Learn more.', 'React', 'Search', '⌘', 'Ctrl', 'K', 'Learn', 'Reference', 'Community', 'Blog', 'react@18.2.0', 'Overview', ' ', 'Hooks', ' ', 'use', ' ', ' - This feature is available in the latest Canary', 'useCallback', ' ', 'useContext', ' ', 'useDebugValue', ' ', 'useDeferredValue', ' ', 'useEffect', ' ', 'useId', ' ', 'useImperativeHandle', ' ', 'useInsertionEffect', ' ', 'useLayoutEffect', ' ', 'useMemo', ' ', 'useOptimistic', ' ', ' - This feature is available in the latest Canary', 'useReducer', ' ', 'useRef', ' ', 'useState', ' ', 'useSyncExternalStore', ' ', 'useTransition', ' ', 'Components', ' ', '<Fragment> (<>)', ' ', '<Profiler>', ' ', '<StrictMode>', ' ', '<Suspense>', ' ', 'APIs', ' ', 'cache', ' ', ' - This feature is available in the latest Canary', 'createContext', ' ', 'forwardRef', ' ', 'lazy', ' ', 'memo', ' ', 'startTransition', ' ', 'experimental_taintObjectReference', ' ', ' - This feature is available in the latest Canary', 'experimental_taintUniqueValue', ' ', ' - This feature is available in the latest Canary', 'Directives', ' ', ' - This feature is available in the latest Canary', \"'use client'\", ' ', ' - This feature is available in the latest Canary', \"'use server'\", ' ', ' - This feature is available in the latest Canary', 'react-dom@18.2.0', 'Hooks', ' ', 'useFormState', ' ', ' - This feature is available in the latest Canary', 'useFormStatus', ' ', ' - This feature is available in the latest Canary', 'Components', ' ', 'Common (e.g. <div>)', ' ', '<form>', ' ', ' - This feature is available in the latest Canary', '<input>', ' ', '<option>', ' ', '<progress>', ' ', '<select>', ' ', '<textarea>', ' ', '<link>', ' ', ' - This feature is available in the latest Canary', '<meta>', ' ', ' - This feature is available in the latest Canary', '<script>', ' ', ' - This feature is available in the latest Canary', '<style>', ' ', ' - This feature is available in the latest Canary', '<title>', ' ', ' - This feature is available in the latest Canary', 'APIs', ' ', 'createPortal', ' ', 'flushSync', ' ', 'findDOMNode', ' ', 'hydrate', ' ', 'preconnect', ' ', ' - This feature is available in the latest Canary', 'prefetchDNS', ' ', ' - This feature is available in the latest Canary', 'preinit', ' ', ' - This feature is available in the latest Canary', 'preinitModule', ' ', ' - This feature is available in the latest Canary', 'preload', ' ', ' - This feature is available in the latest Canary', 'preloadModule', ' ', ' - This feature is available in the latest Canary', 'render', ' ', 'unmountComponentAtNode', ' ', 'Client APIs', ' ', 'createRoot', ' ', 'hydrateRoot', ' ', 'Server APIs', ' ', 'renderToNodeStream', ' ', 'renderToPipeableStream', ' ', 'renderToReadableStream', ' ', 'renderToStaticMarkup', ' ', 'renderToStaticNodeStream', ' ', 'renderToString', ' ', 'Rules of React', 'Overview', ' ', 'Components and Hooks must be pure', ' ', 'React calls Components and Hooks', ' ', 'Rules of Hooks', ' ', 'Legacy APIs', 'Legacy React APIs', ' ', 'Children', ' ', 'cloneElement', ' ', 'Component', ' ', 'createElement', ' ', 'createFactory', ' ', 'createRef', ' ', 'isValidElement', ' ', 'PureComponent', ' ', 'Is this page useful?', 'API Reference', 'Directives', \"'use server'\", ' - This feature is available in the latest Canary', 'Canary', \"'use server'\", ' is needed only if you’re ', 'using React Server Components', ' or building a library compatible with them.', '\\n', \"'use server'\", ' marks server-side functions that can be called from client-side code.', '\\n', 'Reference ', \"'use server'\", ' ', 'Security considerations ', 'Serializable arguments and return values ', 'Usage ', 'Server Actions in forms ', 'Calling a Server Action outside of ', '<form>', ' ', '\\n', '\\n', 'Reference ', '\\n', \"'use server'\", ' ', '\\n', 'Add ', \"'use server'\", ' at the top of an async function body to mark the function as callable by the client. We call these functions ', 'Server Actions', '.', '\\n', 'async', ' ', 'function', ' ', 'addToCart', '(', 'data', ')', ' ', '{', '  ', \"'use server'\", ';', '  ', '// ...', '}', '\\n', 'When calling a Server Action on the client, it will make a network request to the server that includes a serialized copy of any arguments passed. If the Server Action returns a value, that value will be serialized and returned to the client.', '\\n', 'Instead of individually marking functions with ', \"'use server'\", ', you can add the directive to the top of a file to mark all exports within that file as Server Actions that can be used anywhere, including imported in client code.', '\\n', 'Caveats ', '\\n', '\\n', \"'use server'\", ' must be at the very beginning of their function or module; above any other code including imports (comments above directives are OK). They must be written with single or double quotes, not backticks.', '\\n', \"'use server'\", ' can only be used in server-side files. The resulting Server Actions can be passed to Client Components through props. See supported ', 'types for serialization', '.', '\\n', 'To import a Server Action from ', 'client code', ', the directive must be used on a module level.', '\\n', 'Because the underlying network calls are always asynchronous, ', \"'use server'\", ' can only be used on async functions.', '\\n', 'Always treat arguments to Server Actions as untrusted input and authorize any mutations. See ', 'security considerations', '.', '\\n', 'Server Actions should be called in a ', 'Transition', '. Server Actions passed to ', '<form action>', ' or ', 'formAction', ' will automatically be called in a transition.', '\\n', 'Server Actions are designed for mutations that update server-side state; they are not recommended for data fetching. Accordingly, frameworks implementing Server Actions typically process one action at a time and do not have a way to cache the return value.', '\\n', '\\n', 'Security considerations ', '\\n', 'Arguments to Server Actions are fully client-controlled. For security, always treat them as untrusted input, and make sure to validate and escape arguments as appropriate.', '\\n', 'In any Server Action, make sure to validate that the logged-in user is allowed to perform that action.', '\\n', 'Under Construction', 'To prevent sending sensitive data from a Server Action, there are experimental taint APIs to prevent unique values and objects from being passed to client code.', 'See ', 'experimental_taintUniqueValue', ' and ', 'experimental_taintObjectReference', '.', '\\n', 'Serializable arguments and return values ', '\\n', 'As client code calls the Server Action over the network, any arguments passed will need to be serializable.', '\\n', 'Here are supported types for Server Action arguments:', '\\n', '\\n', 'Primitives', '\\n', '\\n', 'string', '\\n', 'number', '\\n', 'bigint', '\\n', 'boolean', '\\n', 'undefined', '\\n', 'null', '\\n', 'symbol', ', only symbols registered in the global Symbol registry via ', 'Symbol.for', '\\n', '\\n', '\\n', 'Iterables containing serializable values', '\\n', '\\n', 'String', '\\n', 'Array', '\\n', 'Map', '\\n', 'Set', '\\n', 'TypedArray', ' and ', 'ArrayBuffer', '\\n', '\\n', '\\n', 'Date', '\\n', 'FormData', ' instances', '\\n', 'Plain ', 'objects', ': those created with ', 'object initializers', ', with serializable properties', '\\n', 'Functions that are Server Actions', '\\n', 'Promises', '\\n', '\\n', 'Notably, these are not supported:', '\\n', '\\n', 'React elements, or ', 'JSX', '\\n', 'Functions, including component functions or any other function that is not a Server Action', '\\n', 'Classes', '\\n', 'Objects that are instances of any class (other than the built-ins mentioned) or objects with ', 'a null prototype', '\\n', 'Symbols not registered globally, ex. ', \"Symbol('my new symbol')\", '\\n', '\\n', 'Supported serializable return values are the same as ', 'serializable props', ' for a boundary Client Component.', '\\n', 'Usage ', '\\n', 'Server Actions in forms ', '\\n', 'The most common use case of Server Actions will be calling server functions that mutate data. On the browser, the ', 'HTML form element', ' is the traditional approach for a user to submit a mutation. With React Server Components, React introduces first-class support for Server Actions in ', 'forms', '.', '\\n', 'Here is a form that allows a user to request a username.', '\\n', '// App.js', 'async', ' ', 'function', ' ', 'requestUsername', '(', 'formData', ')', ' ', '{', '  ', \"'use server'\", ';', '  ', 'const', ' ', 'username', ' = ', 'formData', '.', 'get', '(', \"'username'\", ')', ';', '  ', '// ...', '}', 'export', ' ', 'default', ' ', 'function', ' ', 'App', '(', ')', ' ', '{', '  ', 'return', ' ', '(', '    ', '<', 'form', ' ', 'action', '=', '{', 'requestUsername', '}', '>', '      ', '<', 'input', ' ', 'type', '=', '\"text\"', ' ', 'name', '=', '\"username\"', ' ', '/>', '      ', '<', 'button', ' ', 'type', '=', '\"submit\"', '>', 'Request', '</', 'button', '>', '    ', '</', 'form', '>', '  ', ')', ';', '}', '\\n', 'In this example ', 'requestUsername', ' is a Server Action passed to a ', '<form>', '. When a user submits this form, there is a network request to the server function ', 'requestUsername', '. When calling a Server Action in a form, React will supply the form’s ', 'FormData', ' as the first argument to the Server Action.', '\\n', 'By passing a Server Action to the form ', 'action', ', React can ', 'progressively enhance', ' the form. This means that forms can be submitted before the JavaScript bundle is loaded.', '\\n', 'Handling return values in forms ', '\\n', 'In the username request form, there might be the chance that a username is not available. ', 'requestUsername', ' should tell us if it fails or not.', '\\n', 'To update the UI based on the result of a Server Action while supporting progressive enhancement, use ', 'useFormState', '.', '\\n', '// requestUsername.js', \"'use server'\", ';', 'export', ' ', 'default', ' ', 'async', ' ', 'function', ' ', 'requestUsername', '(', 'formData', ')', ' ', '{', '  ', 'const', ' ', 'username', ' = ', 'formData', '.', 'get', '(', \"'username'\", ')', ';', '  ', 'if', ' ', '(', 'canRequest', '(', 'username', ')', ')', ' ', '{', '    ', '// ...', '    ', 'return', ' ', \"'successful'\", ';', '  ', '}', '  ', 'return', ' ', \"'failed'\", ';', '}', '\\n', '// UsernameForm.js', \"'use client'\", ';', 'import', ' ', '{', ' ', 'useFormState', ' ', '}', ' ', 'from', ' ', \"'react-dom'\", ';', 'import', ' ', 'requestUsername', ' ', 'from', ' ', \"'./requestUsername'\", ';', 'function', ' ', 'UsernameForm', '(', ')', ' ', '{', '  ', 'const', ' ', '[', 'returnValue', ',', ' ', 'action', ']', ' = ', 'useFormState', '(', 'requestUsername', ',', ' ', \"'n/a'\", ')', ';', '  ', 'return', ' ', '(', '    ', '<', '>', '      ', '<', 'form', ' ', 'action', '=', '{', 'action', '}', '>', '        ', '<', 'input', ' ', 'type', '=', '\"text\"', ' ', 'name', '=', '\"username\"', ' ', '/>', '        ', '<', 'button', ' ', 'type', '=', '\"submit\"', '>', 'Request', '</', 'button', '>', '      ', '</', 'form', '>', '      ', '<', 'p', '>', 'Last submission request returned: ', '{', 'returnValue', '}', '</', 'p', '>', '    ', '</', '>', '  ', ')', ';', '}', '\\n', 'Note that like most Hooks, ', 'useFormState', ' can only be called in ', 'client code', '.', '\\n', 'Calling a Server Action outside of ', '<form>', ' ', '\\n', 'Server Actions are exposed server endpoints and can be called anywhere in client code.', '\\n', 'When using a Server Action outside of a ', 'form', ', call the Server Action in a ', 'Transition', ', which allows you to display a loading indicator, show ', 'optimistic state updates', ', and handle unexpected errors. Forms will automatically wrap Server Actions in transitions.', '\\n', 'import', ' ', 'incrementLike', ' ', 'from', ' ', \"'./actions'\", ';', 'import', ' ', '{', ' ', 'useState', ',', ' ', 'useTransition', ' ', '}', ' ', 'from', ' ', \"'react'\", ';', 'function', ' ', 'LikeButton', '(', ')', ' ', '{', '  ', 'const', ' ', '[', 'isPending', ',', ' ', 'startTransition', ']', ' = ', 'useTransition', '(', ')', ';', '  ', 'const', ' ', '[', 'likeCount', ',', ' ', 'setLikeCount', ']', ' = ', 'useState', '(', '0', ')', ';', '  ', 'const', ' ', 'onClick', ' = ', '(', ')', ' ', '=>', ' ', '{', '    ', 'startTransition', '(', 'async', ' ', '(', ')', ' ', '=>', ' ', '{', '      ', 'const', ' ', 'currentCount', ' = ', 'await', ' ', 'incrementLike', '(', ')', ';', '      ', 'setLikeCount', '(', 'currentCount', ')', ';', '    ', '}', ')', ';', '  ', '}', ';', '  ', 'return', ' ', '(', '    ', '<', '>', '      ', '<', 'p', '>', 'Total Likes: ', '{', 'likeCount', '}', '</', 'p', '>', '      ', '<', 'button', ' ', 'onClick', '=', '{', 'onClick', '}', ' ', 'disabled', '=', '{', 'isPending', '}', '>', 'Like', '</', 'button', '>', ';', '    ', '</', '>', '  ', ')', ';', '}', '\\n', '// actions.js', \"'use server'\", ';', 'let', ' ', 'likeCount', ' = ', '0', ';', 'export', ' ', 'default', ' ', 'async', ' ', 'function', ' ', 'incrementLike', '(', ')', ' ', '{', '  ', 'likeCount', '++', ';', '  ', 'return', ' ', 'likeCount', ';', '}', '\\n', 'To read a Server Action return value, you’ll need to ', 'await', ' the promise returned.', 'Previous', \"'use client'\", 'How do you like these docs?', 'Take our survey!', '©', '2024', 'Learn React', 'Quick Start', 'Installation', 'Describing the UI', 'Adding Interactivity', 'Managing State', 'Escape Hatches', 'API Reference', 'React APIs', 'React DOM APIs', 'Community', 'Code of Conduct', 'Meet the Team', 'Docs Contributors', 'Acknowledgements', 'More', 'Blog', 'React Native', 'Privacy', 'Terms', 'On this page', 'Overview', 'Reference ', \"'use server'\", ' ', 'Security considerations ', 'Serializable arguments and return values ', 'Usage ', 'Server Actions in forms ', 'Calling a Server Action outside of ', '<form>', ' ', "}